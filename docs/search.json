[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Desarrollo e implementación con tecnologías libres de un dispositivo portátil para evaluar el confort térmico, lumínico y acústico en interiores",
    "section": "",
    "text": "Resumen\nEste trabajo aborda el desarrollo, calibración y validación del Dispositivo de Temperatura, Humedad, Iluminación y Sonido de Campaña (DTHIS-C), un equipo portátil diseñado para evaluar el confort térmico, acústico y lumínico, así como la calidad del aire en espacios interiores. El dispositivo fue construido utilizando hardware y software libre, lo que permite su flexibilidad, escalabilidad y bajo costo en comparación con equipos comerciales/industriales.\nEl DTHIS-C integra sensores para medir variables ambientales clave, como la temperatura ambiente, temperatura radiante, humedad relativa, velocidad del viento, concentración de CO2, luminancia y niveles de sonido, proporcionando una evaluación integral del confort interior. Los sensores fueron seleccionados tras un proceso de análisis y comparación con equipos de referencia profesionales, asegurando la precisión de las mediciones. La calibración de los sensores se realizó mediante modelos de regresión lineal, con un caso específico en el dominio logarítmico para un sensor, permitiendo corregir desviaciones sistemáticas y garantizar resultados confiables.\nEl dispositivo se integra a una plataforma de Internet de las Cosas (IoT) mediante ThingsBoard, lo que facilita la visualización y análisis de los datos en tiempo real, mejorando la supervisión y el control de las condiciones ambientales durante las campañas de medición.\nEl desarrollo del DTHIS-C representa una alternativa viable y accesible frente a equipos de medición tradicionales, que suelen ser costosos y limitados en disponibilidad. Los resultados obtenidos validan el desempeño del dispositivo y sientan las bases para futuras mejoras en su diseño e implementación, consolidando al DTHIS-C como una herramienta versátil para la evaluación del confort en entornos interiores.\n\n\nAbstract\nThis work focuses on the development, calibration, and validation of the Temperature, Humidity, Illumination, and Sound Campaign Device (DTHIS-C), a portable device designed to assess thermal, acoustic, and lighting comfort, as well as air quality in indoor environments. The device was built using open-source hardware and software, ensuring flexibility, scalability, and low cost compared to commercial/industrial equipment.\nThe DTHIS-C integrates sensors to measure key environmental variables, such as ambient temperature, radiant temperature, relative humidity, wind speed, CO2 concentration, luminance, and sound levels, providing a comprehensive assessment of indoor comfort. The sensors were selected after a process of analysis and comparison with professional reference instruments, ensuring measurement accuracy. Calibration was performed using linear regression models, with one specific case using logarithmic domain regression for a particular sensor, allowing the correction of systematic deviations and guaranteeing reliable results.\nThe device is integrated with an Internet of Things (IoT) platform via ThingsBoard, facilitating real-time data visualization and analysis, which enhances the monitoring and control of environmental conditions during measurement campaigns.\nThe development of the DTHIS-C offers a viable and accessible alternative to traditional measurement equipment, which is often expensive and limited in availability. The results obtained validate the device’s performance and establish a solid foundation for future improvements in its design and implementation, consolidating the DTHIS-C as a versatile tool for evaluating comfort in indoor environments.\n\n\nAgradecimientos\nA mis padres, Ramón y Martha, por su amor incondicional y por inculcarme el valor del esfuerzo y la dedicación. Gracias por su apoyo constante y por motivarme a llegar hasta aquí.\nA mi hermana Martha, mi mejor amiga, cómplice y consejera. Gracias por estar siempre a mi lado, en los mejores y peores momentos, escuchándome y dándome aliento cuando más lo necesito.\nA Michelle, por enseñarme a descubrir los aspectos más bellos de la vida, por su apoyo y compañía. Gracias por mostrarme el valor del amor y ayudarme a comprender lo que deseo recibir y lo que soy capaz de dar.\nA mis amigos, quienes han sido parte esencial de este camino. Gracias a cada uno de ellos soy quien soy hoy. Mención especial para Arge, Fer, Pili y Pau, cuya amistad ha sido una red de apoyo fundamental y una gran fuente de motivación.\nY especialmente a Memo, quien más allá de ser mi tutor, se ha convertido en un gran amigo. Gracias por impulsarme a seguir aprendiendo y por inspirarme a nunca conformarme y siempre aspirar a más.",
    "crumbs": [
      "Resumen"
    ]
  },
  {
    "objectID": "chapter_1.html",
    "href": "chapter_1.html",
    "title": "1  Introducción al confort en espacios interiores y el desarrollo del DTHIS-C",
    "section": "",
    "text": "1.1 Importancia del confort en espacios interiores\nEn este capítulo se examina la importancia del confort en espacios interiores, conforme a los lineamientos del ANSI/ASHRAE Standard 55, que define las condiciones térmicas óptimas para el bienestar de los ocupantes. Se analiza el modelo de confort PMV, que explica cómo varían las expectativas de los usuarios en función del clima y el contexto, y que ha servido como referencia para la selección de las variables ambientales que mide el Dispositivo de Temperatura, Humedad, Iluminación y Sonido de Campaña (DTHIS-C). Esta herramienta portátil permite evaluar el confort térmico, acústico y lumínico, así como la calidad del aire, proporcionando información clave para el diseño de entornos interiores confortables.\nEl confort en espacios interiores es fundamental para garantizar el bienestar y la calidad de vida de los ocupantes, ya que entornos confortables promueven percepciones positivas, mientras que condiciones inadecuadas, como niveles elevados de ruido, temperaturas y humedad inapropiadas, iluminación insuficiente, mala calidad del aire y olores desagradables, pueden generar experiencias negativas y afectar la salud a largo plazo. (Wu, Y. and Liu, Z. and Kong, Z., 2023)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción al confort en espacios interiores y el desarrollo del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_1.html#sec-importancia",
    "href": "chapter_1.html#sec-importancia",
    "title": "1  Introducción al confort en espacios interiores y el desarrollo del DTHIS-C",
    "section": "",
    "text": "Confort térmico, acústico, lumínico y calidad del aire\nEl confort térmico, acústico, lumínico y la calidad del aire son aspectos clave que influyen directamente en la calidad de vida, ya que afectan la salud, el bienestar y el desempeño de las personas en espacios interiores.\nEl confort térmico, regulado por el estándar ANSI/ASHRAE 55, asegura que los ocupantes experimenten condiciones térmicas óptimas, evitando sensaciones de calor o frío extremo que pueden generar incomodidad y afectar la productividad (ASHRAE-55, 2021).\nEl confort acústico minimiza la exposición a ruidos molestos, lo que reduce el estrés, mejora la concentración y favorece entornos tranquilos y funcionales. Un ambiente acústicamente adecuado puede prevenir problemas de salud asociados con la exposición prolongada al ruido (Panagiota Antoniadou and Agis M. Papadopoulos, 2017).\nEl confort lumínico, definido en la norma ISO EN 12464-1, garantiza condiciones de iluminación idóneas para que las personas realicen sus actividades de manera eficiente y segura, evitando la fatiga visual y contribuyendo al bienestar general (British Standard, 2011).\nPor último, una buena calidad del aire, conforme a la normativa ANSI/ASHRAE 62, es esencial para prevenir problemas respiratorios y mantener un ambiente saludable al controlar las concentraciones de CO2 y otros contaminantes (ASHRAE-62, 2001).\nEn las secciones Sección 2.1, Sección 2.3, Sección 2.5 y Sección 2.7 se definen detalladamente estos conceptos y se abordan los aspectos fundamentales asociados a cada uno, junto con el análisis de su impacto en la calidad de vida y el bienestar de los ocupantes. Esta base teórica respalda la importancia de optimizar dichas condiciones en el diseño de entornos interiores saludables y habitables.\n\n\nDTHIS-C\nEl DTHIS-C es un equipo portátil desarrollado para medir, de forma simultánea y en tiempo real, diversas variables físicas que inciden directamente en el confort de los espacios interiores. Las variables evaluadas son las siguientes:\n\nTemperatura ambiente\nTemperatura radiante\nHumedad relativa\nVelocidad del viento\nConcentración de CO2\nLuminancia\nNiveles de sonido\n\nLa versatilidad del DTHIS-C radica en su capacidad para integrar múltiples sensores en un solo dispositivo, lo que facilita el análisis y la monitorización continua de las variables ambientales. Su desarrollo se basa en tecnologías de bajo costo y alto rendimiento, posicionándolo como una alternativa viable a los equipos de medición tradicionales, que suelen ser más costosos y exclusivos. Esta herramienta podría contribuir a la optimización del diseño de entornos habitables mediante la recopilación de datos precisos y confiables.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción al confort en espacios interiores y el desarrollo del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_1.html#sec-modelo",
    "href": "chapter_1.html#sec-modelo",
    "title": "1  Introducción al confort en espacios interiores y el desarrollo del DTHIS-C",
    "section": "1.2 Modelo de confort PMV",
    "text": "1.2 Modelo de confort PMV\nEl modelo de confort térmico PMV (Predicted Mean Vote) es una herramienta predictiva ampliamente reconocida para evaluar la sensación térmica promedio de un grupo de personas en un ambiente interior. Este modelo estima la percepción térmica en una escala que va desde -3 (frío) hasta +3 (caliente), donde 0 representa una sensación térmica neutral, considerada ideal para el confort (Fanger, P. O., 1970). El PMV se fundamenta en el balance de calor del cuerpo humano y toma en cuenta seis variables principales:\n\nTemperatura del aire: Temperatura ambiente del entorno.\nTemperatura radiante media: Influencia de las superficies radiantes circundantes.\nVelocidad del aire: Movimiento del aire en el espacio.\nHumedad relativa: Nivel de humedad en el ambiente.\nTasa metabólica: Nivel de actividad física de los ocupantes.\nAislamiento de la ropa: Capacidad térmica de la vestimenta.\n\nEstas variables se integran en una ecuación compleja (Ecuación 1.1) que calcula el índice PMV, permitiendo predecir si un entorno es térmicamente confortable según las normas internacionales como ANSI/ASHRAE Standard 55 (2021) e ISO 7730 (2005).\n\\[\n\\begin{gather}\n\\text{PMV} = \\left[ 0.303 \\cdot \\exp(-0.036 \\cdot M) + 0.028 \\right] \\cdot \\Bigg\\{ (M - W) \\\\\n- 3.05 \\times 10^{-3} \\cdot \\big[ 5733 - 6.99 \\cdot (M - W) - P_a \\big] - 0.42 \\cdot \\big[ (M - W) \\\\\n- 58.15 \\big] - 1.7 \\times 10^{-5} \\cdot M \\cdot (5867 - P_a) - 0.0014 \\cdot M \\cdot (34 - t_a) \\\\\n- 3.96 \\times 10^{-8} \\cdot f_{cl} \\cdot \\big[ (t_{cl} + 273)^4 - (t_r + 273)^4 \\big] \\\\\n- f_{cl} \\cdot h_c \\cdot (t_{cl} - t_a) \\Bigg\\}\n\\end{gather}\n\\tag{1.1}\\]\nLa determinación de las variables intermedias que describen el intercambio de calor entre el cuerpo y su entorno se realiza mediante las ecuaciones Ecuación 1.2, Ecuación 1.3, Ecuación 1.4 y Ecuación 1.5, las cuales proporcionan los parámetros necesarios para evaluar el balance térmico y, en consecuencia, calcular el índice PMV.\n\\[\n\\begin{gather}\nt_{cl} = 35.7 - 0.028 \\cdot (M - W) - I_{cl} \\cdot \\Bigg\\{ 3.96 \\times 10^{-8} \\cdot f_{cl} \\cdot \\big[(t_{cl} + 273)^4 \\\\\n- (\\bar{t}_r + 273)^4\\big] + f_{cl} \\cdot h_c \\cdot (t_{cl} - t_a) \\Bigg\\}\n\\end{gather}\n\\tag{1.2}\\]\n\\[\nh_c =\n\\begin{cases}\n{2.38 \\cdot |t_{cl} - t_a|^{0.25}} & \\text{si } 2.38 \\cdot |t_{cl} - t_a|^{0.25} &gt; 12.1 \\cdot \\sqrt{v_{ar}} \\\\\n12.1 \\cdot \\sqrt{v_{ar}} & \\text{si } 2.38 \\cdot |t_{cl} - t_a|^{0.25} &lt; 12.1 \\cdot \\sqrt{v_{ar}}\n\\end{cases}\n\\tag{1.3}\\]\n\\[\nf_{cl} =\n\\begin{cases}\n1.00 + 1.290 \\cdot I_{cl} & \\text{si } I_{cl} \\leq 0.078 \\\\\n1.00 + 0.645 \\cdot I_{cl} & \\text{si } I_{cl} &gt; 0.078\n\\end{cases}\n\\tag{1.4}\\]\n\\[\nv_{ar} = v_{air} + 0.3 \\cdot (M - 1)\n\\tag{1.5}\\]\ndonde:\n\\(M\\) : Tasa metabólica (\\(W/m^2\\))\n\\(W\\) : Trabajo mecánico externo (\\(W/m^2\\))\n\\(I_{cl}\\) : Aislamiento térmico de la ropa (\\(m^2 \\cdot °C/W\\))\n\\(f_{cl}\\) : Factor de cobertura de la ropa (sin unidad)\n\\(t_a\\) : Temperatura del aire (°C)\n\\(\\bar{t}_r\\) : Temperatura media radiante (°C)\n\\(p_a\\) : Presión parcial del vapor de agua (Pa)\n\\(v_{ar}\\) : Velocidad relativa del aire (m/s)\n\\(v_{air}\\) : Velocidad del aire (m/s)\n\\(h_c\\) : Coeficiente de transferencia de calor por convección (\\(W/m^2 \\cdot °C\\))\n\\(t_{cl}\\) : Temperatura de la superficie de la ropa (°C)\n\nRelevancia del modelo PMV en el DTHIS-C\nEl modelo PMV es fundamental en el diseño de espacios interiores confortables y eficientes, ya que proporciona un marco cuantitativo para evaluar cómo las condiciones ambientales y personales afectan la percepción térmica de los ocupantes. Su adopción en estándares como ASHRAE 55 lo posiciona como una referencia clave para el diseño de sistemas de calefacción, ventilación y aire acondicionado (HVAC). En el contexto de esta tesis, el PMV sirve como base teórica para comprender cómo optimizar las condiciones térmicas en entornos habitables, alineándose con el objetivo de garantizar el bienestar y la calidad de vida de los usuarios.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción al confort en espacios interiores y el desarrollo del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_1.html#sec-objetivos",
    "href": "chapter_1.html#sec-objetivos",
    "title": "1  Introducción al confort en espacios interiores y el desarrollo del DTHIS-C",
    "section": "1.3 Objetivos",
    "text": "1.3 Objetivos\n\nObjetivo general\n\nDesarrollar un dispositivo de confort móvil usando software y hardware libre.\n\n\n\nObjetivos específicos\n\nSelección de variables a medir.\nIdentificación y selección de sensores apropiados.\nCalibración y referenciación de los sensores seleccionados.\nPropuesta de un diseño de dispositivo con integración de sensores.\nIntegración del dispositivo a un sistema de Internet de las Cosas (IoT).\n\n\n\n\n\nAntoniadou, Panagiota, y Agis M. Papadopoulos. 2017. «Occupants’ thermal comfort: State of the art and the prospects of personalized assessment in office buildings». Energy and Buildings 153: 136-49. https://doi.org/10.1016/j.enbuild.2017.08.001.\n\n\nASHRAE-55. 2021. ANSI/ASHRAE Standard 55-2020: Thermal Environmental Conditions for Human Occupancy. Atlanta, GA: American Society of Heating, Refrigerating; Air-Conditioning Engineers (ASHRAE).\n\n\nASHRAE-62. 2001. ANSI/ASHRAE Standard 62-2001: Ventilation for acceptable indoor air quality. Vol. 62. 2001. American Society of Heating, Refrigerating; Air-Conditioning Engineers.\n\n\nFanger, P. O. 1970. Thermal Comfort: Analysis and Applications in Environmental Engineering. Copenhagen: Danish Technical Press. https://archive.org/details/thermalcomfortan0000fang.\n\n\nInternational Standardization Organization (ISO). 2005. «Ergonomics of the thermal environment-analytical determination and interpretation of the thermal comfort using calculation of the PMV and PPD indices and local thermal comfort». ISO Standard 7730. Geneva.\n\n\nStandard, British. 2011. «Light and lighting: Lighting of work places: Part 1: Indoor work places». NS-EN 12464-1: 2011.\n\n\nWu, Y., Z. Liu, y Z. Kong. 2023. «Indoor Environmental Quality and Occupant Comfort». Buildings 13 (6): 1400. https://doi.org/10.3390/buildings13061400.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introducción al confort en espacios interiores y el desarrollo del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_2.html",
    "href": "chapter_2.html",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "",
    "text": "2.1 Confort térmico\nEn este capítulo se aborda el contexto del confort en espacios cerrados, incluyendo los aspectos térmico, acústico, lumínico y la calidad del aire. Se define el concepto de confort térmico, destacando las variables físicas que lo determinan. Además, se identifican y describen los principales fenómenos asociados con el disconfort térmico, acústico y lumínico. Finalmente, se presentan los aspectos fundamentales relacionados con el confort acústico, lumínico y la calidad del aire.\nEl confort térmico se define como una condición mental que refleja la satisfacción con el entorno térmico, de acuerdo con el estándar ASHRAE-55 (2021).\nSegún Djongyang, Tchinda, y Njomo (2010), el confort térmico se alcanza cuando la temperatura corporal se mantiene dentro de rangos estrechos, la humedad en la piel es baja y el esfuerzo fisiológico para regular la temperatura es mínimo. Además, el confort no solo depende de factores ambientales, sino también de diferentes aspectos, como el tipo de vestimenta, el tipo de actividad física, cambiar de postura o ubicación, abrir una ventana, etc.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#variables-físicas-del-confort-térmico",
    "href": "chapter_2.html#variables-físicas-del-confort-térmico",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.2 Variables físicas del confort térmico",
    "text": "2.2 Variables físicas del confort térmico\nMacpherson (1962) identificó seis factores determinantes que afectan la sensación térmica en los espacios cerrados. Entre ellos, cuatro son variables físicas: temperatura del aire, velocidad del aire, humedad relativa y temperatura media radiante; y dos son variables personales: el aislamiento térmico de la ropa y el nivel de actividad física, también conocido como tasa metabólica. Estos factores constituyen la base para el análisis y predicción del confort térmico.\nAcorde a ASHRAE-55 (2021), dichas variables se definen de la siguiente manera:\n\nTemperatura del aire: La temperatura medida en un punto específico del aire.\nVelocidad del aire: La magnitud del movimiento del aire en un punto determinado, sin considerar su dirección.\nHumedad: Representa el contenido de humedad en el aire y se expresa mediante varias variables termodinámicas, como presión de vapor, temperatura de punto de rocío, temperatura de bulbo húmedo, relación de humedad y humedad relativa. Su promedio espacial y temporal se calcula de manera similar al de la temperatura del aire.\nTemperatura media radiante (\\(t_{r}\\)): La temperatura de un recinto negro y uniforme que intercambia con el ocupante la misma cantidad de calor por radiación que el entorno real. Este valor único aplica a todo el cuerpo y considera tanto la temperatura radiante media de onda larga (\\(t_{rlw}\\)) como la de onda corta (\\(t_{rsw}\\)).\nAislamiento térmico de la ropa (\\(I_{cl}\\)): La resistencia al intercambio de calor sensible proporcionada por un conjunto de ropa, expresada en unidades de “clo”. Nota informativa: Esta definición incluye la transferencia de calor de todo el cuerpo, incluyendo las áreas no cubiertas, como la cabeza y las manos.\nTasa metabólica (\\(met\\)): La tasa a la que se transforma la energía química en calor y trabajo mecánico debido a las actividades metabólicas de un individuo. Se mide por unidad de área de superficie de la piel y se expresa en “met”, equivalente a 58.2 W/m2, que corresponde a la energía generada por unidad de superficie de piel de una persona promedio en reposo.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#sec-acustico",
    "href": "chapter_2.html#sec-acustico",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.3 Confort acústico",
    "text": "2.3 Confort acústico\nEl confort acústico se define como “un estado de satisfacción con las condiciones acústicas”, representa el bienestar y la percepción positiva de un entorno en términos sonoros. Sin embargo, este confort es altamente subjetivo, ya que fuentes de ruido con características físicas similares pueden percibirse de manera distinta dependiendo de la persona. Antoniadou y Papadopoulos (2017) Azar et al. (2020)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#variables-físicas-del-confort-acústico",
    "href": "chapter_2.html#variables-físicas-del-confort-acústico",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.4 Variables físicas del confort acústico",
    "text": "2.4 Variables físicas del confort acústico\nAzar et al. (2020) nombra dos tipos principales de ruido en los edificios:\n\nRuido estructural (por impacto): Generado por impactos físicos o vibraciones sobre un elemento de la construcción.\nRuido aéreo: Transmitido a través del aire.\n\nEl nivel de presión sonora, definido como la vibración del aire que constituye el sonido Berglund (1999), es uno de los principales factores acústicos que influyen en el confort. Un nivel neutral de presión sonora se encuentra en un rango de 30 a 40 \\(dB\\) Antoniadou y Papadopoulos (2017). Para predecir el confort frente al ruido de impacto, se utiliza típicamente el nivel máximo de presión sonora (\\(L_{max}\\)), mientras que para el ruido aéreo se emplea el nivel de presión sonora equivalente durante un periodo de tiempo determinado (\\(L_{eq}\\)). Azar et al. (2020)\nAsimismo Berglund (1999), enumera ciertos factores acústicos que impactan el confort acústico:\n\nFrecuencia del ruido: Su unidad de medida son los Hertz (\\(Hz\\)) y se refiere al número de vibraciones por segundo del aire en el cual el sonido es propagado. El rango de frecuencia audible normalmente se encuentra en un rango de 20-20,000 \\(Hz\\).\nFuente del ruido: Se mencionan diferentes fuentes, las cuales pueden ser industrial, de transporte, construcción y doméstico.\nDuración del ruido\nVariación en el tiempo: Existen variaciones de la presión sonora que suelen causar mayor disconfort auditivo. Por ejemplo, los ruidos que varían periódicamente para crear una sensación de pulsación pueden ser más molestos que el ruido continuo, las variaciones de aproximadamente 4 por segundo podrían ser más perturbadoras.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#sec-luminico",
    "href": "chapter_2.html#sec-luminico",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.5 Confort lumínico",
    "text": "2.5 Confort lumínico\nEl confort lumínico se refiere a la percepción de bienestar visual en un espacio, permitiendo que las personas realicen sus actividades cotidianas de manera efectiva y cómoda bajo condiciones de iluminación adecuadas. Vásquez et al. (2019)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#variables-físicas-del-confort-lumínico",
    "href": "chapter_2.html#variables-físicas-del-confort-lumínico",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.6 Variables físicas del confort lumínico",
    "text": "2.6 Variables físicas del confort lumínico\nSegún se describe en la norma ISO EN 12464-1 Standard (2011), la evaluación del confort lumínico puede lograrse mediante la determinación de: la luminancia y la iluminancia.\n\nLuminancia: Su unidad de medida es la candela por metro cuadrado (\\(cd/m^2\\)) y se define como la densidad de la intensidad luminosa en una dirección específica, por unidad de área proyectada en un punto determinado de una superficie real o imaginaria. CIE (2020b)\nMatemáticamente, se expresa como:\n\\(L_v = \\frac{I_v}{A \\cdot \\cos(\\alpha)}\\)\ndonde (\\(L_v\\)) es la luminancia, (\\(I_v\\)) representa la intensidad luminosa en la dirección especificada, (\\(A\\)) es el área considerada, y (\\(\\alpha\\)) es el ángulo entre la normal a la superficie en el punto especificado y la dirección considerada.\nLa luminancia cuantifica cuán brillante aparece una superficie cuando se observa desde una dirección específica, teniendo en cuenta tanto la intensidad de la luz emitida o reflejada como la geometría de la superficie.\nIluminancia: Su unidad de medida es el lux (\\(lx\\)) y se define como la densidad del flujo luminoso incidente por unidad de área en un punto de una superficie real o imaginaria. CIE (2020a)\nMatemáticamente, se expresa como:\n\\(E_v = \\frac{\\Phi_v}{A}\\)\ndonde (\\(E_v\\)) es la iluminancia, (\\(\\Phi_v\\)) representa el flujo luminoso incidente, y (\\(A\\)) es el área sobre la cual incide el flujo luminoso.\nLa iluminancia cuantifica la cantidad de luz que llega a una superficie específica, considerando tanto la intensidad de la luz como el área sobre la cual se distribuye.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#sec-calidad",
    "href": "chapter_2.html#sec-calidad",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.7 Calidad del aire",
    "text": "2.7 Calidad del aire\nDe acuerdo con el estándar ASHRAE-62 (2001), se considera que el aire interior tiene una calidad aceptable cuando “no contiene contaminantes conocidos en concentraciones nocivas según lo establecido por las autoridades competentes y la mayoría sustancial de las personas expuestas (80% o más) no expresa insatisfacción”.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_2.html#variables-físicas-de-la-calidad-del-aire",
    "href": "chapter_2.html#variables-físicas-de-la-calidad-del-aire",
    "title": "2  Confort y calidad del aire en espacios interiores",
    "section": "2.8 Variables físicas de la calidad del aire",
    "text": "2.8 Variables físicas de la calidad del aire\nLa calidad del aire interior se evalúa monitoreando la concentración de CO2, comparándola con los niveles exteriores (300-500 ppm). ASHRAE-62 (2001) recomienda mantener concentraciones interiores entre 1000 y 1200 ppm para garantizar un ambiente adecuado y regular los sistemas de ventilación. Sin embargo, concentraciones superiores a 5000 ppm son peligrosas, ya que indican una ausencia total de aire fresco.\n\n\n\n\nAntoniadou, Panagiota, y Agis M. Papadopoulos. 2017. «Occupants’ thermal comfort: State of the art and the prospects of personalized assessment in office buildings». Energy and Buildings 153: 136-49. https://doi.org/10.1016/j.enbuild.2017.08.001.\n\n\nASHRAE-55. 2021. ANSI/ASHRAE Standard 55-2020: Thermal Environmental Conditions for Human Occupancy. Atlanta, GA: American Society of Heating, Refrigerating; Air-Conditioning Engineers (ASHRAE).\n\n\nASHRAE-62. 2001. ANSI/ASHRAE Standard 62-2001: Ventilation for acceptable indoor air quality. Vol. 62. 2001. American Society of Heating, Refrigerating; Air-Conditioning Engineers.\n\n\nAzar, Elie, William O’Brien, Salvatore Carlucci, Tianzhen Hong, Andrew Sonta, Joyce Kim, Maedot S. Andargie, et al. 2020. «Simulation-aided occupant-centric building design: A critical review of tools, methods, and applications». Energy and Buildings 224: 110292. https://doi.org/10.1016/j.enbuild.2020.110292.\n\n\nBerglund, B. 1999. «Guidelines for community noise». World Health Organization.\n\n\nCIE. 2020a. «Illuminance (17-21-060)». https://cie.co.at/eilvterm/17-21-060.\n\n\n———. 2020b. «Luminance (17-21-050)». https://cie.co.at/eilvterm/17-21-050.\n\n\nDjongyang, Noël, René Tchinda, y Donatien Njomo. 2010. «Thermal comfort: A review paper». Renewable and Sustainable Energy Reviews 14 (9): 2626-40. https://doi.org/10.1016/j.rser.2010.07.040.\n\n\nMacpherson, R. K. 1962. «The assessment of the thermal environment: A review». British Journal of Industrial Medicine 19 (3): 151-64. https://doi.org/10.1136/oem.19.3.151.\n\n\nStandard, British. 2011. «Light and lighting: Lighting of work places: Part 1: Indoor work places». NS-EN 12464-1: 2011.\n\n\nVásquez, Natalia Giraldo, Maíra Longhinotti Felippe, Fernando O. R. Pereira, y Ariane Kuhnen. 2019. «Luminous and visual preferences of young children in their classrooms: Curtain use, artificial lighting and window views». Building and Environment 152: 59-73. https://doi.org/10.1016/j.buildenv.2019.01.049.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Confort y calidad del aire en espacios interiores</span>"
    ]
  },
  {
    "objectID": "chapter_3.html",
    "href": "chapter_3.html",
    "title": "3  Diseño y construcción del DTHIS-C",
    "section": "",
    "text": "3.1 Especificaciones del DTHIS-C\nEn este capítulo se presenta una descripción detallada del DTHIS-C, incluyendo sus componentes y especificaciones técnicas. Además, se proporcionan los diagramas de conexión y los códigos necesarios para la configuración de cada sensor, facilitando tanto la reproducción completa del DTHIS-C como la implementación individual de sus sensores.\nEn la Tabla 3.1 se muestran los sensores y componentes electrónicos que conforman al DTHIS-C.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diseño y construcción del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_3.html#sec-especificaciones",
    "href": "chapter_3.html#sec-especificaciones",
    "title": "3  Diseño y construcción del DTHIS-C",
    "section": "",
    "text": "Tabla 3.1: Sensores y componentes electrónicos que constituyen al DTHIS-C.\n\n\n\n\n\n\n\n\n\n\n\n\nSensor\nVariable\nComunicación\nMicrocontrolador\nAcondicionador de señal\n\n\n\n\nTermopar tipo T\nTemperatura ambiente\nICSP\nArduino UNO WiFi Rev2\nPWFusion MAX31856 SEN-30007\n\n\nTPF1/E-20 PT1000\nTemperatura radiante\nICSP\nArduino UNO WiFi Rev2\nAdafruit PT1000 RTD-MAX31865\n\n\nWind Sensor Rev P6\nVelocidad del viento\nADC\nArduino UNO WiFi Rev2\n\n\n\nSCD30 Sensirion\nCO2 y humedad relativa\nI2C\nRaspberry Pi 4 Model B\n\n\n\n5MP OV5647 Wide Angle Fisheye Camera\nLuminancia\nCSI\nRaspberry Pi 4 Model B\n\n\n\nMicrófono ambiental USB\nSonido\nUSB\nRaspberry Pi 4 Model B",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diseño y construcción del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_3.html#sec-diseno",
    "href": "chapter_3.html#sec-diseno",
    "title": "3  Diseño y construcción del DTHIS-C",
    "section": "3.2 Diseño del DTHIS-C",
    "text": "3.2 Diseño del DTHIS-C\nLa arquitectura del DTHIS-C se ha fundamentado en el uso combinado de la Raspberry Pi 4 y el Arduino Uno WiFi Rev2, microcontroladores seleccionados por las siguientes características y ventajas:\n\nVersatilidad y capacidad de procesamiento:\nLa Raspberry Pi 4, programada mediante Python, proporciona una plataforma robusta para el procesamiento avanzado de datos y la ejecución de algoritmos complejos. Su flexibilidad, junto con la facilidad de integración de diversas funcionalidades, permite adaptar el sistema a requerimientos específicos y optimizar el rendimiento según las demandas del entorno.\nConectividad y eficiencia en la adquisición de datos:\nAmbos dispositivos cuentan con conectividad a Internet, lo que posibilita la transmisión en tiempo real de datos hacia una base de datos remota alojada en el servidor ThingsBoard. Además, el Arduino Uno WiFi Rev2 destaca por su eficiencia en la gestión de operaciones de entrada/salida, garantizando una respuesta rápida y precisa en la adquisición y control de los sensores.\nCompatibilidad y ecosistema abierto:\nLa adopción de tecnologías abiertas facilita la integración y reproducibilidad del sistema. La amplia comunidad de desarrolladores que respalda tanto la Raspberry Pi como el Arduino asegura soporte continuo, actualizaciones regulares y una extensa variedad de recursos y librerías, lo que se traduce en mayor flexibilidad para adaptar el sistema a diversas necesidades y entornos.\nAccesibilidad:\nFrente a equipos especializados, la utilización de estos microcontroladores constituye una solución rentable sin comprometer el rendimiento ni la fiabilidad del sistema. Esta ventaja económica facilita la replicación y el escalado del proyecto en distintos contextos.\n\nA continuación, se detallan las especificaciones técnicas y el código implementado para cada sensor.\n\n3.2.1 Arduino UNO WiFi Rev2\nEl Arduino UNO WiFi Rev2 es una placa de microcontrolador diseñada para proyectos de Internet de las Cosas (IoT), integrando conectividad WiFi y Bluetooth mediante el módulo u-blox NINA-W102 y un sensor IMU de 6 ejes (LSM6DS3TR) para detección de movimientos. Equipada con el microcontrolador ATmega4809, ofrece una óptima capacidad de memoria, y mantiene compatibilidad con el formato estándar UNO, facilitando su uso con shields existentes. Su diseño eficiente y versátil lo hace ideal para la adquisición de datos de sensores y la comunicación inalámbrica en tiempo real, como se requiere en el DTHIS-C. Arduino (2023)\nEn la Tabla 3.2 se muestran sus especificaciones.\n\n\n\nTabla 3.2: Especificaciones del Arduino UNO WiFi Rev2.\n\n\n\n\n\n\n\n\n\nParámetro\nDetalle\n\n\n\n\nMicrocontrolador\nATmega4809\n\n\nMemoria flash\n48 KB\n\n\nSRAM\n6,144 Bytes\n\n\nEEPROM\n256 Bytes\n\n\nConectividad Wi-Fi\nSí, u-blox NINA-W102 (2.4 GHz)\n\n\nBluetooth\nSí, Bluetooth Low Energy\n\n\nSensor IMU\nSí, LSM6DS3TR (6 ejes)\n\n\nPines digitales I/O\n14 (5 PWM)\n\n\nPines analógicos\n6\n\n\nVoltaje de operación\n5V\n\n\nConsumo máximo total\n200 mA\n\n\nDimensiones\n68.6 mm x 53.4 mm\n\n\n\n\n\n\nEl siguiente código constituye el programa principal del Arduino UNO WiFi Rev2 en el DTHIS-C, encargado de gestionar la conexión WiFi, la comunicación con ThingsBoard mediante el protocolo MQTT, y el envío de datos provenientes de sensores como termopares, temperatura radiante y velocidad del viento:\n\n\nCódigo\n#include &lt;WiFiNINA.h&gt;\n#include &lt;PubSubClient.h&gt;\n\n// Definiciones para la red WiFi y ThingsBoard\n#define WIFI_AP \"IER\"          \n#define WIFI_PASSWORD \"acadier2014\" \n#define TOKEN \"bXQq1eepFYJV3nldvLTV\"\n#define THINGSBOARD_SERVER \"tb.ier.unam.mx\"\n#define MQTT_PORT 1883\n\n// Inicialización de las librerías y objetos\nWiFiClient espClient;\nPubSubClient mqttClient(espClient);\n\n/**\n * Configuración inicial del dispositivo.\n * Configura la conexión WiFi y el cliente MQTT para ThingsBoard.\n */\nvoid setup() {\n  WiFi.begin(WIFI_AP, WIFI_PASSWORD);  // Conectar a la red WiFi\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);  // Espera hasta conectarse\n  }\n  \n  mqttClient.setServer(THINGSBOARD_SERVER, MQTT_PORT);\n  connectToThingsBoard();  // Conectar a ThingsBoard\n}\n\n/**\n * Ciclo principal del programa.\n * Mantiene las conexiones y realiza las tareas periódicas.\n */\nvoid loop() {\n  if (WiFi.status() != WL_CONNECTED) {\n    reconnectWiFi();  // Reconecta WiFi si es necesario\n  }\n  \n  if (!mqttClient.connected()) {\n    reconnectThingsBoard();  // Reconecta MQTT si es necesario\n  }\n\n  // Obtener las mediciones de los termopares (temperaturas)\n  float* temperatures = ThermocoupleTemp();\n  sendTC(temperatures);    // Enviar temperaturas a ThingsBoard\n\n  // Obtener la temperatura del TPF1\n  float radiant = TPF1Temp();\n  sendRT(radiant);  // Enviar temperatura radiante a ThingsBoard\n\n  // Obtener la velocidad promedio del viento\n  float* windspeed = WindSensor();\n  sendWS(windspeed);      // Enviar velocidad del viento a ThingsBoard\n\n  mqttClient.loop();\n  delay(2000);  // Espera 2 segundos antes de la siguiente iteración\n}\n\n/**\n * Conecta a la red WiFi.\n */\nvoid connectWiFi() {\n  WiFi.begin(WIFI_AP, WIFI_PASSWORD);\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);  // Espera hasta conectarse\n  }\n}\n\n/**\n * Reconecta a la red WiFi si es necesario.\n */\nvoid reconnectWiFi() {\n  while (WiFi.status() != WL_CONNECTED) {\n    WiFi.begin(WIFI_AP, WIFI_PASSWORD);\n    delay(500);\n  }\n}\n\n/**\n * Reconecta a ThingsBoard si es necesario.\n */\nvoid reconnectThingsBoard() {\n  while (!mqttClient.connected()) {\n    connectToThingsBoard();\n    delay(5000);  // Espera antes de reintentar\n  }\n}\n\n/**\n * Conecta a ThingsBoard usando el token de autenticación.\n */\nbool connectToThingsBoard() {\n  return mqttClient.connect(\"ArduinoClient\", TOKEN, NULL);\n}\n\n/**\n * Envía los datos de temperatura.\n */\nvoid sendTC(float* temperatures) {\n  String topic = \"v1/devices/me/telemetry\";\n  String payload = \"{\\\"T1\\\":\" + String(temperatures[0]) + \n                   \", \\\"T2\\\":\" + String(temperatures[1]) + \n                   \", \\\"T3\\\":\" + String(temperatures[2]) + \n                   \", \\\"T4\\\":\" + String(temperatures[3]) + \"}\";\n  mqttClient.publish(topic.c_str(), payload.c_str());\n}\n\n/**\n * Envía los datos de temperatura radiante.\n */\nvoid sendRT(float radiant) {\n  String topic = \"v1/devices/me/telemetry\";\n  String payload = \"{\\\"TR\\\":\" + String(radiant) + \"}\";\n  mqttClient.publish(topic.c_str(), payload.c_str());  \n}\n\n/**\n * Envía los datos de velocidad del viento.\n */\nvoid sendWS(float* windspeed) {\n  String topic = \"v1/devices/me/telemetry\";\n  String payload = \"{\\\"WS\\\":\" + String(windspeed[0]) + \n                   \", \\\"TEMP\\\":\" + String(windspeed[1]) + \"}\";\n  mqttClient.publish(topic.c_str(), payload.c_str());\n}\n\n\n\nTermopar Tipo T\nEn la construcción del DTHIS se emplea un termopar tipo T, un sensor de temperatura compuesto por la unión de cobre y cobre-níquel. Su uso es ideal para entornos con humedad.\nA continuación, se presentan sus especificaciones según OMEGA (s. f.):\nRangos de Temperatura\n- Grado de termopar: -200 a 350 °C (-328 a 662 °F).\n- Grado de extensión: -60 a 100 °C (-76 a 212 °F).\nLímites de Error\n- Estándar:\n- ±1.0 °C o ±0.75% por encima de 0 °C.\n- ±1.0 °C o ±1.5% por debajo de 0 °C.\n- Especial:\n- ±0.5 °C o ±0.4%.\n\n\nPWFusion MAX31856 SEN-30007\nEl PWFusion MAX31856 SEN-30007 es un shield de termopares de cuatro canales diseñado para integrarse con la plataforma Arduino. Este dispositivo se conecta directamente a la placa de desarrollo. El módulo acondiciona la señal proveniente de termopares, realizando el procesamiento necesario para adaptar y amplificar la señal eléctrica, la cual se caracteriza por su baja amplitud.\n\n\n\n\n\n\nFigura 3.1: Diagrama de conexión para el shield MAX31856 SEN-30007.\n\n\n\nAcorde a PWFusion (s. f.) sus específicaciones son las siguientes:\n\nConversión de señal analógica a digital con resolución de 19 bits.\nInterfaz ICSP de 4 hilos.\nRango de voltaje de alimentación: 3.3 V a 5.0 V.\n\nIgualmente se proporciona el código de Arduino empleado:\n\n\nCódigo\n#include &lt;PWFusion_MAX31856.h&gt;\n\n// Definición de los pines chip select para cada termopar\nuint8_t tcChipSelects[] = {10, 9, 8, 7};\n#define NUM_THERMOCOUPLES   (sizeof(tcChipSelects) / sizeof(uint8_t))\n\n// Coeficientes de calibración para cada termopar\nconst float m[NUM_THERMOCOUPLES] = {1.0450, 1.0602, 1.0814, 1.0554};  // Pendientes\nconst float b[NUM_THERMOCOUPLES] = {-2.4327, -2.8632, -4.4316, -3.9348};  // Intersecciones\n\n// Se crea un objeto MAX31856 para cada termopar\nMAX31856 thermocouples[NUM_THERMOCOUPLES];\n\nfloat* ThermocoupleTemp() {\n  static float tc_temps[NUM_THERMOCOUPLES];\n  static bool initialized = false;\n\n  // Inicializa los sensores solo la primera vez que se llama a la función\n  if (!initialized) {\n    delay(1000);  // Espera para la estabilización de los sensores\n    for (int i = 0; i &lt; NUM_THERMOCOUPLES; i++) {\n      thermocouples[i].begin(tcChipSelects[i]);\n      thermocouples[i].config(T_TYPE, CUTOFF_60HZ, AVG_SEL_4SAMP, CMODE_OFF);\n    }\n    initialized = true;\n  }\n  \n  // Inicia la medición en cada sensor\n  for (int i = 0; i &lt; NUM_THERMOCOUPLES; i++) {\n    thermocouples[i].startOneShotMeasurement();\n  }\n  \n  // Espera el tiempo necesario para que la conversión se complete\n  delay(180);\n  \n  // Actualiza la muestra en cada sensor\n  for (int i = 0; i &lt; NUM_THERMOCOUPLES; i++) {\n    thermocouples[i].sample();\n  }\n  \n  // Obtiene la temperatura ambiente de cada sensor y aplica la calibración\n  for (int i = 0; i &lt; NUM_THERMOCOUPLES; i++) {\n    if (thermocouples[i].getStatus() != 0) {\n      // En caso de error, se asigna NaN (Not a Number)\n      tc_temps[i] = NAN;\n    } else {\n      float raw_temperature = thermocouples[i].getTemperature();\n      tc_temps[i] = m[i] * raw_temperature + b[i];  // Aplica la calibración\n    }\n  }\n  \n  return tc_temps;\n}\n\n\n\n\nFuehler Systeme TPF1/E-20 PT1000\nSe empleó el TPF1/E-20 PT1000, diseñado para medir la temperatura radiante en un rango de temperaturas de -30 °C a +75 °C. Su sonda de temperatura, basada en la tecnología PT1000, se puede montar como un péndulo libremente suspendido, lo que permite obtener mediciones precisas de la temperatura de sensación térmica en entornos donde la convección natural y la estratificación del aire pueden influir en los resultados. FuehlerSysteme (s. f.)\nEspecificaciones\n\nTipo de circuito: Conexión de 2 hilos.\nCorriente de medición: Aproximadamente 1 mA.\nConexión eléctrica: Extremos pelados con terminales.\nCable: Cable de PVC (2×0,25 mm2, temperatura máxima +105 °C) con extremos de cable núcleo disponibles en diferentes longitudes.\nResistencia de fuga: Mayor a 100 M\\(\\Omega\\) a +20 °C (500 V DC).\nMaterial del globo: Aluminio (negro).\nDimensiones del globo: Diámetro de 70 mm.\n\n\n\nAdafruit PT1000 RTD-MAX31865\nEl PT1000 RTD-MAX31865 es un convertidor de resistencia a digital.\n\n\n\n\n\n\nFigura 3.2: Diagrama de conexión para el PT1000 RTD-MAX31865.\n\n\n\nAdafruit (s. f.) describe las siguientes características:\n\nRealiza la conversión de la resistencia de sensores RTD de platino a un valor digital de forma sencilla.\nSoporte con RTD de platino con valores de 100 \\(\\Omega\\) a 1 k\\(\\Omega\\) (a 0 °C), abarcando desde PT100 hasta PT1000.\nCompatible con configuraciones de 2, 3 y 4 hilos para la conexión de sensores.\nIncorpora una interfaz ICSP, facilitando su integración en sistemas basados en microcontroladores.\nCuenta con un ADC de 15 bits que proporciona una resolución nominal de temperatura de 0.03125 °C (valor variable debido a la no linealidad del RTD) y una precisión total de hasta 0.5 °C (0.05% de la escala completa) en todas las condiciones operativas.\nTiempo máximo de conversión es de 21 ms.\n\nA continuación se muestra el código de Arduino:\n\n\nCódigo\n#include &lt;Adafruit_MAX31865.h&gt;\n\n// Usamos software SPI: CS, DI, DO, CLK\nAdafruit_MAX31865 thermo = Adafruit_MAX31865(10, 11, 12, 13);\n// Para hardware SPI solo se pasa el pin CS\n// Adafruit_MAX31865 thermo = Adafruit_MAX31865(10);\n\n#define RREF      4300.0  // Resistor de referencia (usa 430.0 para PT100 o 4300.0 para PT1000)\n#define RNOMINAL  1000.0  // Resistencia nominal a 0°C (100.0 para PT100, 1000.0 para PT1000)\n\n// Función que realiza la medición y retorna la temperatura radiante en grados Celsius.\nfloat TPF1Temp() {\n  // Inicializa el sensor solo la primera vez que se llama a la función.\n  static bool initialized = false;\n  if (!initialized) {\n    thermo.begin(MAX31865_2WIRE);  // Inicialización del MAX31865\n    initialized = true;\n  }\n  \n  // Lectura del valor RTD\n  uint16_t rtd = thermo.readRTD();\n  \n  // Calcula la razón y la resistencia (opcional si se requiere para otros cálculos)\n  float ratio = rtd / 32768.0;\n  float resistance = RREF * ratio;\n  \n  // Calcula la temperatura utilizando el método de la librería\n  float raw_temp = thermo.temperature(RNOMINAL, RREF);\n\n  // Aplica la ecuación de calibración: 1.0582 * temp + (-1.5553)\n  float radiant_temp = 1.0582 * raw_temp - 1.5553;\n  \n  return radiant_temp;\n}\n\n\n\n\nModern Device Wind Sensor Rev. P6\nEl sensor de viento Rev. P6 es un anemómetro de hilo caliente. Incorpora un potenciómetro de alta precisión para facilitar la calibración (realizada en fábrica) y utilizar termistores de coeficiente de temperatura positivo, que aseguran mediciones más estables incluso ante variaciones de temperatura ambiente. Requiere una fuente de alimentación de 9 a 12 V (idealmente 12 V) para garantizar el adecuado calentamiento de los termistores y evitar la saturación en condiciones de viento intenso. Integra un sensor de temperatura ambiental con salida escalada a 3.3 V y una señal de viento ajustada a un máximo de 3.3 V mediante resistencias de alta precisión. ModernDevice (s. f.)\n\n\n\n\n\n\nFigura 3.3: Diagrama de conexión para el Wind Sensor Rev. P6.\n\n\n\nEspecificaciones\n\nVoltaje de alimentación: 10–12 V.\nCorriente: Aproximadamente 40 mA.\nVelocidades de viento medidas: 0–150 mph.\nCompensación de temperatura ambiente.\n\n\n\nCódigo\n#include &lt;math.h&gt;\n\nconst int OutPin  = A0;   // Pin analógico para el sensor de viento (\"OUT\")\nconst int TempPin = A2;   // Pin analógico para el sensor de temperatura (\"TMP\")\n\n// Función que lee velocidad de viento y temperatura, y retorna un array de dos floats:\n// ws[0] -&gt; velocidad de viento (m/s)\n// ws[1] -&gt; temperatura (°C)\nfloat* WindSensor() {\n  static float ws[2];\n  \n  // Lectura del sensor de viento\n  int windADunits = analogRead(OutPin);\n  float voltage = (float)windADunits * 5.0 / 1024.0;\n  \n  // Aplicar la corrección al voltaje\n  float correctedVoltage = voltage - 1.1621;\n  \n  // Lectura del sensor de temperatura\n  int tempRawAD = analogRead(TempPin);\n  float tempC = ((((float)tempRawAD * 5.0) / 1024.0) - 0.400) / 0.0195;\n  \n  // Cálculo de la velocidad de viento en m/s usando la ecuación empírica:\n  // WS = 26.3431 * (correctedVoltage)^(1.4273) * (tempC)^(-0.7631)\n  float windSpeed = 26.3431 * pow(correctedVoltage, 1.4273) * pow(tempC, -0.7631);\n  \n  ws[0] = windSpeed;\n  ws[1] = tempC;\n  \n  return ws;\n}\n\n\n\n\n\n3.2.2 Raspberry Pi 4 Model B\nEl Raspberry Pi 4 Model B es una computadora de placa única de alto rendimiento, diseñada para tareas de procesamiento avanzado y conectividad eficiente en un formato compacto. Equipada con un procesador de 64 bits de cuatro núcleos y opciones de RAM de hasta 8 GB, ofrece soporte para salida de video dual 4K y conectividad avanzada mediante Wi-Fi de doble banda, Bluetooth 5.0, Ethernet Gigabit y puertos USB 3.0, con capacidad para Power over Ethernet (PoE) mediante un accesorio adicional. Su diseño versátil y eficiente la hace ideal para la integración y gestión de datos en el sistema DTHIS-C. Raspberry (2019)\nEn la Tabla 3.3 se muestran sus especificaciones.\n\n\n\nTabla 3.3: Especificaciones del Raspberry Pi 4 Model B.\n\n\n\n\n\n\n\n\n\nParámetro\nDetalle\n\n\n\n\nProcesador\nBroadcom BCM2711, 4 núcleos Cortex-A72, 1.5 GHz\n\n\nMemoria RAM\n8 GB (LPDDR4-3200)\n\n\nConectividad Wi-Fi\nSí, dual-band 2.4 GHz y 5 GHz, 802.11ac\n\n\nBluetooth\nSí, Bluetooth 5.0\n\n\nPuertos USB\n2 USB 3.0, 2 USB 2.0\n\n\nSalida de video\n2 micro HDMI, soporte dual 4K 60 fps\n\n\nEthernet\nGigabit\n\n\nAlmacenamiento\nTarjeta microSD\n\n\nVoltaje de operación\n5V\n\n\nConsumo energético\nEficiente, sin ventilador (~3A recomendado)\n\n\nDimensiones\n85.6 mm x 56.5 mm x 17 mm\n\n\n\n\n\n\nEl siguiente código constituye el programa principal del Raspberry Pi 4 Model B en el DTHIS-C, encargado de gestionar la conexión al servidor ThingsBoard mediante el protocolo MQTT y el envío de datos provenientes de sensores como el SCD30 (CO2, temperatura y humedad relativa). Escrito en Python, utiliza la librería paho-mqtt para la comunicación y está diseñado para operar de manera continua:\n\n\nCódigo\nimport paho.mqtt.client as mqtt\nimport json\nimport time\nfrom thingsboard_credentials import thingsboard_data\nfrom scd30 import scd30_measurements\nfrom sound import sound_data\n\n# Obtiene los datos de conexión para ThingsBoard\nunique_id, token, thingsboard_host = thingsboard_data()\n\n# Diccionario para almacenar las lecturas del sensor\nsensor_data = {'CO2': 0, 'T': 0, 'HR': 0}\n# Diccionario para datos de sonido\n# micro_data = {'RMS': 0, 'dBmax': 0, 'dBmin': 0}  \n\n# Configura el cliente MQTT\nclient = mqtt.Client(unique_id, False)\nclient.username_pw_set(token, password=None)\nclient.connect(thingsboard_host, 1883, 60, '')\nclient.loop_start()\n\ntry:\n    while True:\n        # Obtiene las mediciones del sensor SCD30\n        CO2, T, HR = scd30_measurements()\n\n        # Actualiza el diccionario con las lecturas actuales\n        sensor_data['CO2'] = CO2\n        sensor_data['T'] = T\n        sensor_data['HR'] = HR\n\n        # Publica los datos del SCD30 en ThingsBoard\n        client.publish('v1/devices/me/telemetry', json.dumps(sensor_data), 1)\n\n        # Obtiene los datos de sonido\n        # micro_data = sound_data() \n\n        # Publica los datos de sonido en ThingsBoard\n        # client.publish('v1/devices/me/telemetry', json.dumps(micro_data), 1)\n\n        time.sleep(2)  # Ajusta el intervalo de tiempo entre lecturas\n\nexcept KeyboardInterrupt:\n    pass\n\n# Detiene el loop del cliente MQTT y desconecta del servidor\nclient.loop_stop()\nclient.disconnect()\n\n\n\nSensirion SCD30\nEl SCD30 es un sensor de CO2 basado en tecnología de detección por infrarrojos. Incorpora un sensor de humedad y temperatura. Cuenta con un diseño de doble canal. Además, ofrece una precisión de ±(30 ppm + 3% de la lectura) en un rango de 400 a 10,000 ppm. Sensirion (s. f.)\n\n\n\n\n\n\nFigura 3.4: Diagrama de conexión para el SCD30.\n\n\n\nEspecificaciones\nCO2\n\nRango de medición: 400 – 10,000 ppm\nPrecisión: ±30 ppm ±3% del valor medido\nTiempo de respuesta (τ63%): 20 s\nEstabilidad térmica: 2.5 ppm/°C\n\nHumedad\n\nPrecisión típica: ±3 %RH\nRango de operación: 0 – 95 %RH\nTiempo de respuesta (τ63%): 8 s\nCertificación de calibración: Calibrado de fábrica\nTemperatura\nPrecisión típica: ±0.4 °C\nTiempo de respuesta (τ63%): 10 s\n\nCaracterísticas generales\n\nVoltaje de alimentación: 3.3 – 5.5 V\nCorriente promedio: 19 mA\nCorriente máxima: 75 mA\nRango de temperatura de operación: 0 – 50 °C\nInterfaces: I²C, ModBus, PWM\nDimensiones: 35 × 23 × 7 mm\n\nA continuación se muestra el código de Python empleado para su incorpación al DTHIS-C:\n\n\nCódigo\nimport time\nimport board\nimport busio\nfrom scd30_i2c import SCD30\n\ndef scd30_measurements():\n    \"\"\"\n    Función para obtener las lecturas de CO2, Temperatura y Humedad Relativa del sensor SCD30.\n\n    Retorna:\n        tuple: (CO2, T, HR) donde\n            CO2: concentración de CO2 en ppm\n            T: temperatura en grados Celsius\n            HR: humedad relativa en porcentaje\n    \"\"\"\n    # Inicializa el sensor SCD30\n    scd30 = SCD30()\n    # Espera para asegurarse de que el sensor esté listo\n    time.sleep(2)  \n    \n    # Verifica si los datos están listos para ser leídos\n    if scd30.get_data_ready():\n        # Lee las mediciones del sensor\n        CO2, T, HR = scd30.read_measurement()\n        # Redondea cada valor a dos decimales\n        CO2 = round(CO2, 2)\n        T = round(T, 2)\n        HR = round(HR, 2)\n        return CO2, T, HR\n\n\n\n\nArducam 5MP OV5647 Ultra Wide Angle\nLa cámara Arducam Ultra Wide Angle cuenta con un objetivo ojo de pez M12 que ofrece un campo de visión horizontal de 220°. Arducam (s. f.)\n\n\n\n\n\n\nFigura 3.5: Diagrama de conexión para la cámara OV5647.\n\n\n\nEspecificaciones\n\nSensor: Omnivision OV5647\nTamaño del sensor: 1/4″ (OV5647)\nResolución: 5 MP (2592×1944)\nVideo:\n\n1080p a 30 fps\n720p a 60 fps\n480p a 90 fps\n\nSensibilidad IR: Filtro IR-cut integrado (solo luz visible)\nCampo de visión horizontal (HFOV): 220°\nDistancia focal efectiva: 0.76 mm\nDistancia focal equivalente en 35 mm: 8.2 mm\nTipo de enfoque: Manual\nMontura del objetivo: M12\nDimensiones: 36 mm × 36 mm\nCorriente pico: 300 mA\n\nA continuación, se muestra el código escrito en Bash/Shell que accede a la cámara y, posteriormente, genera los mapas de luminancia:\n\n\nCódigo\n#!/bin/bash\n\nDATE=$(date +\"%Y-%m-%d_%H%M\")\nIMG_DIR=\"/home/hdeza/Luminance/images\"\nHDR_IMG=\"/home/hdeza/Luminance/HDR_images\"\nMAPS_DIR=\"/home/hdeza/Luminance/maps\"\nOUTPUT_DIR=\"/home/hdeza/Luminance\"\n\n#Loop through shutter speeds and capture images\nSHUTTERS=(100 500 1000 5000 10000 50000 100000 500000 1000000 2000000)\n\nfor i in \"${!SHUTTERS[@]}\"; do\n  rpicam-still --raw -n --gain 1 -t 500 --shutter \"${SHUTTERS[$i]}\" -o \"$IMG_DIR/$(printf \"%02d\" $((i+1))).jpg\"\ndone\n\n#Run raw2hdr with the path to the images and save as image.hdr\nraw2hdr -a -e -g -f -h -w -o \"$HDR_IMG/image_$DATE.hdr\" \"$IMG_DIR\"/*dng\n\n#Get info about the final HDR\ngetinfo \"$HDR_IMG/image_$DATE.hdr\"\n\n#Nullify exposure value\nra_xyze -r -o \"$HDR_IMG/image_$DATE.hdr\" &gt; \"$OUTPUT_DIR/image_nullEV_$DATE.hdr\"\n\n#Resize image\npfilt -1 -x 1000 -y 1000 \"$OUTPUT_DIR/image_nullEV_$DATE.hdr\" &gt; \"$OUTPUT_DIR/image_resize_$DATE.hdr\"\n\n#Make photometric adjustment\npcomb -s 1.8 \"$OUTPUT_DIR/image_resize_$DATE.hdr\" &gt; \"$OUTPUT_DIR/image_photometric_$DATE.hdr\"\n\n#Change view angle for fisheye\ngetinfo -a \"VIEW= -vta -vv 160 -vh 160\" &lt; \"$OUTPUT_DIR/image_photometric_$DATE.hdr\" &gt; \"$IMG_DIR/image_final_$DATE.hdr\"\n\n#Print illuminance value\necho \"Total illuminance is: \"\nevalglare -V \"$IMG_DIR/image_final_$DATE.hdr\"\nevalglare -V \"$IMG_DIR/image_final_$DATE.hdr\" &gt; \"$OUTPUT_DIR/illuminance_$DATE.txt\"\n\n#Move final HDR image to HDR_images\nmv \"$IMG_DIR/image_final_$DATE.hdr\" \"$HDR_IMG/image_final_$DATE.hdr\"\n\n#Crop to a 160\npcomb -e 'Cx:xmax/2;Cy:ymax/2;R:444.44;sq(x):x*x' -e 'inC=sq(R)-sq(x-Cx)-sq(y-Cy)' -e 'ro=if(inC,ri(1),0);go=if(inC,gi(1),0);bo=if(inC,bi(1),0)' \"$HDR_IMG/image_final_$DATE.hdr\" &gt; \"$HDR_IMG/image_crop_$DATE.hdr\"\n\n#Make the luminance map with configurations and save it\nfalsecolor -s 5000 -d 1 -i \"$HDR_IMG/image_crop_$DATE.hdr\" --log 3 &gt; \"$MAPS_DIR/image_map_$DATE.hdr\"\n\n\n\n\nMicrófono ambiental USB\nEl micrófono incorpora un filtro que atenúa eficazmente los ruidos producidos por el viento o la respiración. Su patrón de captación direccional optimiza la focalización de la fuente sonora. Steren (s. f.)\n\n\n\n\n\n\nFigura 3.6: Diagrama de conexión para el micrófono.\n\n\n\nEspecificaciones\n\nRespuesta en frecuencia: 50 a 10,000 Hz\nImpedancia 2,200 \\(\\Omega\\)\nSensibilidad: -32 dB ±3 dB\n\nA continuación, se presentan los códigos utilizados para la captura y análisis de sonido. Estos scripts permiten grabar el audio, extraer parámetros clave de la señal y convertirlos a valores en decibeles (dB).\nEl siguiente script graba un archivo de audio en formato WAV durante 15 segundos a una frecuencia de muestreo de 44.1 kHz:\n\n\nCódigo\n#!/bin/bash\n\ngrabar=\"/home/hdeza/Sonido/audio.wav\"\n\narecord -D plughw:3,0 -f cd -t wav -d 15 -r 44100 $grabar\n\n\nPosteriormente este script analiza el archivo de audio y extrae la amplitud máxima de la señal, almacenándola en un archivo de texto:\n\n\nCódigo\n#!/bin/bash\n\nmaximo=\"/home/hdeza/Sonido/dBmax.txt\"\n\n/usr/bin/sox /home/hdeza/Sonido/audio.wav -n stat 2&gt;&1 | /usr/bin/grep \"Maximum amplitude:\" | /usr/bin/awk '{print $3}'  &gt; $maximo\n\n\nSimilar al anterior, este script obtiene la amplitud mínima del audio y la guarda en un archivo de texto:\n\n\nCódigo\n#!/bin/bash\n\nminimo=\"/home/hdeza/Sonido/dBmin.txt\"\n\n/usr/bin/sox /home/hdeza/Sonido/audio.wav -n stat 2&gt;&1 | /usr/bin/grep \"Minimum amplitude:\" | /usr/bin/awk '{print $3}' &gt; $minimo\n\n\nEste código calcula la amplitud RMS (Root Mean Square) del audio, un indicador de la potencia promedio de la señal sonora:\n\n\nCódigo\n#!/bin/bash\n\nmedia=\"/home/hdeza/Sonido/rms.txt\"\n\n/usr/bin/sox /home/hdeza/Sonido/audio.wav -n stat 2&gt;&1 | /usr/bin/grep \"RMS     amplitude:\" | /usr/bin/awk '{print $3}' &gt; $media\n\n\nEl código en Python lee los valores extraídos previamente (RMS, amplitud máxima y mínima) y los convierte a decibeles utilizando la fórmula:\n\\[dB = 20 \\log_{10}(\\text{amplitud}) + 120\\]\nLos valores resultantes son almacenados en un diccionario para su posterior uso:\n\n\nCódigo\nimport numpy as np\n\ndef sound_data():\n    \"\"\"\n    Función para obtener los datos de sonido desde archivos y calcular sus valores en dB.\n\n    Retorna:\n        dict: Datos de sonido en dB (RMS_dB, dBmax_dB, dBmin_dB).\n    \"\"\"\n    archivos = [\n        '/home/dthisc/dthis-c/sound/rms.txt',\n        '/home/dthisc/dthis-c/sound/dBmax.txt',\n        '/home/dthisc/dthis-c/sound/dBmin.txt'\n    ]\n    \n    rms_x = \"\"\n    dBmax_x = \"\"\n    dBmin_x = \"\"\n\n    for archivo in archivos:\n        with open(archivo, 'r', encoding='utf-8') as f:\n            if archivo == '/home/dthisc/dthis-c/sound/rms.txt':\n                rms_x = round(float(f.read().strip()), 4)\n            elif archivo == '/home/dthisc/dthis-c/sound/dBmax.txt':\n                dBmax_x = round(float(f.read().strip()), 4)\n            elif archivo == '/home/dthisc/dthis-c/sound/dBmin.txt':\n                dBmin_x = round(float(f.read().strip()), 4)\n\n    rms_db = round(20 * np.log10(float(rms_x)) + 120, 4)\n    dBmax_db = round(20 * np.log10(float(dBmax_x)) + 120, 4)\n    dBmin_db = round(20 * np.log10(abs(float(dBmin_x))) + 120, 4)\n\n    return {'RMS': rms_db, 'dBmax': dBmax_db, 'dBmin': dBmin_db}",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diseño y construcción del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_3.html#sec-materiales",
    "href": "chapter_3.html#sec-materiales",
    "title": "3  Diseño y construcción del DTHIS-C",
    "section": "3.3 Lista de materiales",
    "text": "3.3 Lista de materiales\nLa Tabla 3.4 muestra la lista de materiales necesarios para la construcción del DTHIS-C, detallando la cantidad de cada componente, los costos y la fuente de venta.\n\n\n\nTabla 3.4: Lista de materiales para la construcción del DTHIS-C.\n\n\n\n\n\nDesignación\nComponente\nCantidad\nCosto unitario (MXN)\nCosto total (MXN)\nFuente de compra\n\n\n\n\nAdaptador USB\nUGREEN Adaptador USB C Hembra a USB Macho 3\n1\n$199.00\n$199.00\nAmazon\n\n\nArduino\nArduino UNO WiFi Rev2\n1\n$1,268.10\n$1,268.10\nAG Electrónica\n\n\nCable para cámara Raspberry\nOKY9053\n1\n$27.59\n$27.59\nAG Electrónica\n\n\nCarcasa\nCarcasa ABS para Raspberry Pi 4 con ventilador y disipadores de calor\n1\n$188.00\n$188.00\n330ohms\n\n\nFisheye\n5MP OV5647 Wide Angle Fisheye Camera\n1\n$502.59\n$502.59\nAG Electrónica\n\n\nFuente de alimentación\nDC 12 V 30 A Fuente de alimentación 360 W\n1\n$382.00\n$382.00\nAmazon\n\n\nFuente para Arduino\nAclorol 9V 1A DC Fuente de alimentación\n2\n$269.00\n$538.00\nAmazon\n\n\nFuente para Raspberry\nFuente oficial para Raspberry Pi 27W USB-C\n1\n$370.00\n$370.00\n330ohms\n\n\nMAX31856\nPWFusion SEN-30007 MAX31856\n1\n≈ $1,493.10\n≈ $1,493.10\nPlaying With Fusion\n\n\nMAX31865\nAdafruit PT1000 RTD-MAX31865\n1\n≈ $269.10\n≈ $269.10\nAdafruit\n\n\nMicro SD\nMemoria Microsd Kingston Canvas Go Plus 64gb U3 V30 A2 170mb\n1\n$194.00\n$194.00\nMercado Libre\n\n\nMicrófono\nMicrófono ambiental USB\n1\n$99.00\n$99.00\nSteren\n\n\nRaspberry\nRaspberry Pi 4 Model B 8 GB\n1\n$1,990.52\n$1,990.52\nAG Electrónica\n\n\nSCD30\nSCD30 Sensirion\n1\n≈ $563.94\n≈ $563.94\nDigiKey\n\n\nTermopar\nTermopar tipo T\n30 m\n$3,735.00\n$3,735.00\nOmega\n\n\nTPF1\nTPF1/E-20 PT1000\n1\n≈ $1,576.60\n≈ $1,576.60\nFuehlerSysteme\n\n\nTripié\nXXZU 210 cm soporte de luz\n1\n$539.10\n$539.10\nAmazon\n\n\nWind Sensor\nWind Sensor Rev P6\n1\n≈ $719.10\n≈ $719.10\nModern Device\n\n\n\n\n\n\nNota: Los precios no incluyen envío y pueden estar sujetos a cambios según el destino del producto.\n\n\n\n\nAdafruit. s. f. «Adafruit PT1000 RTD Temperature Sensor Amplifier - MAX31865». https://www.adafruit.com/product/3648#description.\n\n\nArducam. s. f. «Arducam 5MP OV5647 Ultra Wide Angle Fisheye Camera for Raspberry Pi». https://www.arducam.com/product/arducam-ultra-wide-angle-fisheye-5mp-ov5647-camera-for-raspberry-pi/.\n\n\nArduino. 2023. «Arduino UNO WiFi Rev2». https://store.arduino.cc/products/arduino-uno-wifi-rev2.\n\n\nFuehlerSysteme. s. f. «Radiation Pendulum Temperature Sensor». https://www.fuehlersysteme.de/Radiation-Pendulum-Temperature-Sensor_1#70bd/embedded/.\n\n\nModernDevice. s. f. «Wind Sensor Rev. P». https://moderndevice.com/products/wind-sensor-rev-p.\n\n\nOMEGA. s. f. «¿Qué es un sensor termopar?» https://es.omega.com/prodinfo/termopares.html#.\n\n\nPWFusion. s. f. «4-Channel T-Type Thermocouple MAX31856 SPI Digital Arduino Shield». https://www.playingwithfusion.com/productview.php?pdid=71&catid=1008.\n\n\nRaspberry. 2019. «Raspberry Pi 4 Model B». https://www.raspberrypi.com/products/raspberry-pi-4-model-b/.\n\n\nSensirion. s. f. «SCD30». https://sensirion.com/products/catalog/SCD30.\n\n\nSteren. s. f. «Micrófono USB C de solapa para celular». https://www.steren.com.mx/microfono-usb-c-de-solapa-para-celular.html.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Diseño y construcción del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_4.html",
    "href": "chapter_4.html",
    "title": "4  Calibración y referenciación del DTHIS-C",
    "section": "",
    "text": "4.1 Metodología experimental\nEn este capítulo se detalla el proceso de calibración y referenciación del DTHIS-C. Se describen las metodologías experimentales empleadas para validar su precisión, así como las pruebas realizadas en diferentes escenarios. Además, se presentan y analizan los resultados obtenidos en términos de variables térmicas, lumínicas y acústicas, ofreciendo una evaluación integral de su desempeño. Finalmente, se explican las herramientas y procedimientos para la recuperación, visualización e interpretación de los datos recopilados.\nDado que cada sensor mide diferentes variables físicas y sus mediciones se obtienen de manera distinta, se han diseñado campañas de calibración y referenciación adaptadas a las características propias de cada instrumento. Este proceso responde a la necesidad de garantizar la exactitud, confiabilidad y trazabilidad de los datos recopilados.\nLa metodología experimental se basa en obtener mediciones precisas que permitan validar el desempeño del dispositivo en condiciones reales. Para ello, se definieron procedimientos apoyados en instrumentos de referencia certificados, lo que facilita la detección y corrección de desviaciones inherentes a cada sensor, asegurando resultados consistentes tanto en condiciones controladas como en situaciones de campo.\nLa aplicación de estos procedimientos refuerza la integridad de la adquisición de datos y favorece una optimización continua del sistema, facilitando su integración en diversos contextos de aplicación.\nA continuación se muestra en la Tabla 4.1 la lista de los sensores y sus respectivos instrumentos de referencia utilizados para la calibración y referenciación:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Calibración y referenciación del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_4.html#sec-metodologia",
    "href": "chapter_4.html#sec-metodologia",
    "title": "4  Calibración y referenciación del DTHIS-C",
    "section": "",
    "text": "Tabla 4.1: Instrumentos de calibración y referenciación para los sensores que consitutyen al DTHIS-C.\n\n\n\n\n\n\n\n\n\n\n\nVariable\nSensor\nInstrumento\nProcedimiento\n\n\n\n\nTemperatura ambiente\nTermopar tipo T\nAMETEK Jofra PTC-155\nCalibración\n\n\nTemperatura radiante\nTPF1/E-20 PT1000\nQuest Technologies QUESTemp 36\nCalibración\n\n\nVelocidad del viento\nWind Sensor Rev P6\nGill Instruments WindMaster\nCalibración\n\n\nCO2 y humedad relativa\nSCD30 Sensirion\nFluke 975 AirMeter\nReferenciación\n\n\nSonido\nMicrófono ambiental USB\nTES-1356 Sound Level Calibrator\nCalibración\n\n\nLuminancia\n5MP OV5647 Wide Angle Fisheye Camera\nNo aplica\nNo aplica",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Calibración y referenciación del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_4.html#sec-obtencion",
    "href": "chapter_4.html#sec-obtencion",
    "title": "4  Calibración y referenciación del DTHIS-C",
    "section": "4.2 Obtención y visualización de los datos",
    "text": "4.2 Obtención y visualización de los datos\n\nThingsBoard\nThingsBoard es una plataforma IoT de código abierto diseñada para la recopilación, procesamiento, visualización y gestión de dispositivos, ThingsBoard (2023). En el contexto de esta tesis, se utiliza para transmitir en tiempo real las mediciones obtenidas de los distintos sensores del DTHIS-C hacia un servidor central, donde se alojan y resguardan los datos en una base de datos dedicada a Internet de las Cosas.\nSegún la documentación oficial de ThingsBoard, la plataforma admite la conectividad mediante protocolos estándares como MQTT, CoAP y HTTP, lo que facilita la integración de diversos dispositivos y sensores, ThingsBoard (2023). En este caso, las mediciones de los sensores se envían desde el DTHIS-C a ThingsBoard, que actúa como un repositorio seguro y escalable. La plataforma no solo almacena la información, sino que también permite la creación de dashboards interactivos y personalizables que posibilitan la visualización en tiempo real de las mediciones. Esto es fundamental durante las campañas de medición, ya que permite monitorizar de forma inmediata el desempeño de los sensores, identificar tendencias y detectar posibles anomalías en los datos.\nPara obtener datos directamente desde ThingsBoard, se desarrolló una función en el paquete instalable de Python denominado iertools, creado por el Grupo de Energía en Edificaciones. Este paquete se puede instalar desde la consola de su ordenador (previamente contando con una distribución de Python instalada) mediante el siguiente comando:\n\npip install git+https://github.com/AltamarMx/iertools.git\n\nEs importante señalar que, antes de proceder a la obtención y descarga de datos desde ThingsBoard, es necesario crear un archivo de configuración con extensión .ini. Un archivo .ini es un documento de texto plano que almacena parámetros y opciones en formato clave-valor, y se utiliza para definir la configuración necesaria (como la URL del servidor y el token de acceso) que el paquete iertools requiere para conectarse a ThingsBoard.\nA continuación, se presenta un ejemplo de cómo estructurar dicho archivo:\n\n[dthisc]\ntoken     = token\ndevice_id = device_id\ntenant    = lata_testing@ier.unam.mx\npassword  = password\nhost      = tb.ier.unam.mx\nport      = 8080 \n\nUna vez instalado iertools, es posible recuperar datos desde un script o notebook. El siguiente fragmento de código ilustra cómo obtener los datos de medición de los termopares del DTHIS-C a partir de ThingsBoard; este ejemplo puede ser ajustado según las necesidades específicas, permitiendo extraer distintos conjuntos de datos o modificar parámetros conforme a los requerimientos del estudio:\n\n\nCódigo\nfrom iertools.tb import *\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\nfecha1 = parse(\"2024-11-22\") \nfecha2 = fecha1 + pd.Timedelta(\"1D\")\n\ntmp = TB(config_file='data/config.ini', device_name='dthisc')\nsensores = [\"TEMP1\", \"TEMP2\", \"TEMP3\", \"TEMP4\"]\n\ndata = pd.concat([tmp.get_df(key=sensor,start_datetime=fecha1,end_datetime=fecha2) for sensor in sensores],axis=1)\n\nhora_inicio = \"2024-11-22 15:42\"\nhora_fin = \"2024-11-22 17:09\"\n\ndata = data[(data.index &gt;= hora_inicio) & (data.index &lt;= hora_fin)]\ndata.sort_index(inplace=True)\n\ndata.head(10)\n\n\n\n\n\n\n\n\n\nTEMP1\nTEMP2\nTEMP3\nTEMP4\n\n\nts\n\n\n\n\n\n\n\n\n2024-11-22 15:42:00.774\n12.42\n12.63\n13.81\n13.48\n\n\n2024-11-22 15:42:03.505\n12.37\n12.57\n13.81\n13.46\n\n\n2024-11-22 15:42:06.235\n12.44\n12.61\n13.75\n13.48\n\n\n2024-11-22 15:42:08.965\n12.46\n12.59\n13.79\n13.45\n\n\n2024-11-22 15:42:11.697\n12.38\n12.51\n13.75\n13.44\n\n\n2024-11-22 15:42:14.427\n12.35\n12.56\n13.77\n13.41\n\n\n2024-11-22 15:42:17.159\n12.41\n12.63\n13.73\n13.40\n\n\n2024-11-22 15:42:19.892\n12.41\n12.52\n13.66\n13.38\n\n\n2024-11-22 15:42:22.620\n12.38\n12.56\n13.66\n13.40\n\n\n2024-11-22 15:42:25.351\n12.34\n12.52\n13.72\n13.34\n\n\n\n\n\n\n\nFinalmente, para almacenar los datos recuperados, se puede utilizar el siguiente comando para exportarlos a un archivo CSV:\n\ndata.to_csv(\"ruta/de/su/preferencia.csv\")\n\n\n\nTemperatura ambiente\nEn esta campaña de calibración se utilizó el AMETEK Jofra PTC-155 (Figura 4.1), un calibrador de temperatura que permite evaluar sensores en un rango de -25°C a 155°C.\n\n\n\n\n\n\nFigura 4.1: AMETEK Jofra PTC-155.\n\n\n\nEl instrumento mencionado se utilizó junto a cuatro termopares tipo T, estableciendo cinco puntos de referencia de temperatura en el intervalo de 10°C a 50°C.\nPara cada punto de calibración, se esperó aproximadamente 5 minutos para que el calibrador alcanzara y estabilizara la temperatura deseada. Una vez estabilizada, se registraron los datos durante 10 minutos antes de proceder al siguiente punto. Los resultados obtenidos en esta campaña se pueden observar en la Figura 4.2.\n\n\n\n\n\n\n\nFigura 4.2: Rangos de temperatura utilizados para la calibración de los termopares.\n\n\n\n\n\n\nTemperatura radiante\nPara la medición de la temperatura radiante se empleó el QUESTemp 36 (Figura 4.3), un confortímetro diseñado para evaluar el estrés térmico en el ambiente, ya que permite medir la temperatura radiante, la temperatura del aire y la humedad relativa.\n\n\n\n\n\n\nFigura 4.3: Quest Technologies QUESTemp 36.\n\n\n\nEl experimento consistió en ubicar el QUESTemp 36 dentro de una caja diseñada para limitar la incidencia directa de la radiación solar, lo que minimizó la influencia de la radiación externa y redujo el efecto de la convección forzada del viento, permitiendo así que la medición se centrara en la radiación térmica del entorno inmediato. Paralelamente, se colocó el sensor TPF1 en condiciones similares para garantizar que ambos dispositivos registraran la temperatura con la menor perturbación posible. Se tomaron datos cada minuto durante 23 horas. Los datos obtenidos se pueden observar en la Figura 4.4.\n\n\n\n\n\n\n\nFigura 4.4: Intervalo de medición del QUESTemp 36 y el TPF1 para su calibración.\n\n\n\n\n\n\nVelocidad del viento\nEl WindMaster de Gill Instruments (Figura 4.5) es un anemómetro ultrasónico de alta precisión diseñado para medir la velocidad y dirección del viento en tres direcciones (u, v, w). En esta campaña se utilizó como instrumento de referencia para la calibración del Wind Sensor.\n\n\n\n\n\n\nFigura 4.5: Gill Instruments WindMaster.\n\n\n\nLa campaña de calibración tuvo una duración de 1 hora, durante la cual se capturaron datos a una frecuencia de 1 muestra por segundo. Aprovechando las dimensiones del WindSensor (2230 x 680 mm), se posicionó estratégicamente en la parte superior central del WindMaster, previa verificación de que su presencia no interfiriera con las mediciones del anemómetro. En un entorno abierto, el WindSensor registró datos de voltaje, los cuales se utilizaron junto con los datos de velocidad del viento obtenidos del WindMaster para desarrollar una ecuación de calibración que permitiera convertir el voltaje medido a m/s. Los resultados de la campaña se pueden visualizar en la Figura 4.6.\n\n\n\n\n\n\n\nFigura 4.6: Comparación de la velocidad del viento registrada por el WindMaster y el voltaje del Wind Sensor para su calibración.\n\n\n\n\n\n\nHumedad relativa y CO2\nPara la campaña de referenciación del SCD30, el instrumento utilizado fue el Fluke 975 AirMeter (Figura 4.7), este es un instrumento portátil de diagnóstico de la calidad del aire interior. Este dispositivo mide simultáneamente temperatura, humedad relativa, dióxido de carbono (CO2) y monóxido de carbono (CO).\n\n\n\n\n\n\nFigura 4.7: Fluke 975 AirMeter.\n\n\n\nLa campaña consistió en realizar mediciones simultáneas del Fluke 975 AirMeter y del SCD30 durante un período total de 7 horas y 45 minutos, registrando una muestra cada minuto. Para minimizar posibles interferencias, ambos dispositivos se ubicaron lo más próximos posible y se instalaron en una zona aislada de un espacio cerrado, de modo que la presencia humana no afectara los resultados. Los datos obtenidos se muestran en la Figura 4.8.\n\n\n\n\n\n\n\nFigura 4.8: Comparación de las mediciones del Fluke y el SCD30 durante su campaña de referenciación.\n\n\n\n\n\n\nSonido\n\n\n\n\n\n\nFigura 4.9: TES-1356 Sound Level Calibrator.\n\n\n\n\n\nIluminancia\n\n\n\n\n\n\nFigura 4.10: Mapa de iluminancia generado con una cámara 5MP OV5647 y el software Radiance.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Calibración y referenciación del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_4.html#sec-analisis",
    "href": "chapter_4.html#sec-analisis",
    "title": "4  Calibración y referenciación del DTHIS-C",
    "section": "4.3 Análisis e interpretación de resultados",
    "text": "4.3 Análisis e interpretación de resultados\n\nTemperatura ambiente\nPara la calibración de los termopares, se utilizó Python junto con la librería scikit-learn, una herramienta utilizada para el análisis y modelado de datos. En particular, se aplicó un ajuste por regresión lineal a los datos obtenidos durante la campaña, utilizando los siguientes rangos de tiempo y sus respectivas temperaturas de referencia (Tabla 4.2).\n\n\n\nTabla 4.2: Temperaturas de referencia y rangos de tiempo.\n\n\n\n\n\nTemperatura (°C)\nInicio\nFinal\n\n\n\n\n10\n15:44:01\n15:52:31\n\n\n20\n16:02:06\n16:11:52\n\n\n30\n16:20:44\n16:28:58\n\n\n40\n16:39:23\n16:49:57\n\n\n50\n16:58:24\n17:08:25\n\n\n\n\n\n\nEl ajuste por regresión lineal es una técnica estadística utilizada para modelar la relación entre una variable dependiente y una o más variables independientes. En este caso, la variable dependiente es la temperatura de referencia (\\(T_{ref}\\)), mientras que las variables independientes corresponden a las lecturas obtenidas por cada termopar. El modelo lineal (Ecuación 4.1) se expresa de la forma:\n\\[\nT_{ref} = m \\cdot T_{sensor} + b\n\\tag{4.1}\\]\ndonde \\(m\\) es la pendiente y \\(b\\) es la ordenada al origen. La regresión lineal permite minimizar el error entre las mediciones del sensor y los valores de referencia, obteniendo ecuaciones de calibración (Ecuación 4.2) que corrigen las lecturas de cada termopar.\n\\[\n\\begin{align}\nT_{ref} &= 1.0450 \\cdot TEMP1 - 2.4327 \\\\\nT_{ref} &= 1.0602 \\cdot TEMP2 - 2.8632 \\\\\nT_{ref} &= 1.0814 \\cdot TEMP3 - 4.4316 \\\\\nT_{ref} &= 1.0554 \\cdot TEMP4 - 3.9348\n\\end{align}\n\\tag{4.2}\\]\nAl aplicar estas ecuaciones a los datos obtenidos en la campaña, se obtienen los valores corregidos de temperatura para cada termopar. Los resultados de la calibración pueden observarse en la Figura 4.11.\n\n\n\n\n\n\n\nFigura 4.11: Resultados de las mediciones de temperatura después de aplicar la ecuación de calibración.\n\n\n\n\n\n\nTemperatura radiante\nPara la calibración del TPF1/E-20, se aplicó un ajuste por regresión lineal utilizando la librería scikit-learn de Python, a partir de los datos de temperatura registrados simultáneamente por el QUESTemp 36 y el sensor TPF1/E-20. Empleando el mismo modelo lineal descrito en la Ecuación 4.1, se derivó la siguiente ecuación de calibración (Ecuación 4.3):\n\\[\nT_{ref} = 1.0582 \\cdot temp - 1.5553\n\\tag{4.3}\\]\nAl aplicar esta ecuación a los datos obtenidos durante la campaña, se calcularon los valores corregidos para el TPF1/E-20. Los resultados de esta calibración se pueden observar en la Figura 4.12.\n\n\n\n\n\n\n\nFigura 4.12: Comparación de las mediciones del QUESTemp 36, el TPF1/E-20 y sus datos tras la calibración.\n\n\n\n\nEn la tabla Tabla 4.3 se observa que, antes de calibrar, el sensor TPF1/E-20 presentaba un error medio de -0.1124, lo que indica un sesgo sistemático que tendía a subestimar la temperatura en comparación con el QUESTemp 36. Tras la aplicación de la ecuación de calibración, el error medio se reduce drásticamente a 4.8948e-15, un valor prácticamente nulo que evidencia la eliminación casi total del sesgo sistemático. Paralelamente, el error medio absoluto disminuye de 0.1518 a 0.0344, lo que implica una mejora significativa en la precisión global de las mediciones. Estos resultados confirman que el proceso de calibración ha corregido eficazmente tanto el sesgo como la dispersión de los datos, permitiendo obtener mediciones de temperatura de alta fiabilidad y precisión, estrechamente alineadas con los valores de referencia del QUESTemp 36.\n\n\n\nTabla 4.3: Error medio y error medio absoluto antes y después de la calibración.\n\n\n\n\n\nFase\nError medio\nError medio absoluto\n\n\n\n\nAntes de calibrar\n-0.1124\n0.1518\n\n\nDespués de calibrar\n4.8948e-15\n0.0344\n\n\n\n\n\n\n\n\nVelocidad del viento\nDurante la calibración del Wind Sensor se siguió la metodología proporcionada por el fabricante Device (2017) en su blog oficial. Según esta fuente, la relación entre la velocidad del viento (WS), el voltaje corregido y la temperatura sigue una ley de potencia descrita por la siguiente ecuación (Ecuación 4.4):\n\\[\nWS = a \\cdot \\text{voltaje}^b \\cdot \\text{temp}^c\n\\tag{4.4}\\]\nAdicionalmente, se identificó un error sistemático en las lecturas de voltaje: en condiciones de viento nulo (0 m/s), el Wind Sensor registraba un desfase de 1.1621 V. Este error se corrigió restando 1.1621 V a cada medición, de modo que el voltaje empleado en el análisis reflejara únicamente la contribución del viento.\nPara facilitar el ajuste mediante técnicas de regresión, se aplicó una transformación logarítmica a ambos lados de la ecuación, lo que permitió convertir el modelo en una forma lineal (Ecuación 4.5):\n\\[\n\\ln(WS) = \\ln(a) + b \\cdot \\ln(\\text{voltaje}) + c \\cdot \\ln(\\text{temp})\n\\tag{4.5}\\]\nEsta transformación es crucial, ya que permite emplear técnicas de regresión lineal para estimar los parámetros \\(ln(a)\\), \\(b\\) y \\(c\\) a partir de los datos experimentales. Una vez obtenidos, se recupera el parámetro \\(a\\) mediante la función exponencial \\((a = exp(ln(a)))\\) y se formula la ecuación de calibración en su forma original. En este dominio lineal, se utilizó la librería scikit-learn de Python para estimar los parámetros del modelo.\nAdicionalmente, se identificó un error sistemático en las lecturas de voltaje: en condiciones de viento nulo (0 m/s), el Wind Sensor registraba un desfase de 1.1621 V. Este error se corrigió restando 1.1621 V a cada medición, de modo que el voltaje empleado en el análisis reflejara únicamente la contribución del viento.\nPara el caso elegido, correspondiente a un remuestreo de 10 segundos, el proceso de regresión lineal en el dominio logarítmico produjo la siguiente ecuación de calibración (Ecuación 4.6):\n\\[\nWS = 26.3431 \\cdot \\text{voltage}^{1.4273} \\cdot \\text{temp}^{-0.7631}\n\\tag{4.6}\\]\nEsta ecuación se emplea para convertir las mediciones de voltaje (tras aplicar la corrección) y de temperatura en valores precisos de velocidad del viento (m/s).\nEl coeficiente de correlación obtenido tras aplicar el modelo es un indicador de la calidad del ajuste. Valores de correlación cercanos a 1 implican una excelente concordancia entre las mediciones del Wind Sensor (tras la calibración) y las obtenidas con el WindMaster, lo que confirma que el modelo captura de manera adecuada la variabilidad de los datos. En la Tabla 4.4 se resumen los coeficientes de correlación para los diferentes intervalos de remuestreo.\n\n\n\nTabla 4.4: Coeficientes de correlación para los distinto remuestreos.\n\n\n\n\n\nRemuestreo\nCoeficiente de correlación\n\n\n\n\n3 segundos\n0.7622\n\n\n5 segundos\n0.8079\n\n\n10 segundos\n0.8637\n\n\n\n\n\n\nEl aumento progresivo en el coeficiente de correlación, alcanzando 0.8637 para un remuestreo de 10 segundos, indica que el modelo de calibración y la corrección del desfase mejoran significativamente la consistencia de las mediciones del Wind Sensor con respecto al WindMaster. Estos hallazgos validan la eficacia del procedimiento de calibración y pueden observarse en la Figura 4.13.\n\n\n\n\n\n\n\nFigura 4.13: Comparación de las mediciones de velocidad del viento registradas por el WindMaster y el Wind Sensor tras su calibración.\n\n\n\n\n\n\nHumedad relativa y CO2\nPara esta campaña de referenciación, se compararon directamente los datos de medición obtenidos por el SCD30 y el Fluke 975 AirMeter, dado que el SCD30 se calibra de forma independiente. Se realizó el cálculo de errores, en particular el error medio y el error medio absoluto, para evaluar la discrepancia entre las mediciones de ambos instrumentos. Estos errores permiten determinar si existe algún sesgo sistemático en las lecturas del SCD30 respecto al Fluke.\nEl error medio se obtiene al calcular la diferencia promedio entre las mediciones del SCD30 y las del Fluke. Un valor negativo indica que, en promedio, el SCD30 tiende a subestimar la variable, mientras que un valor positivo indica una sobreestimación. El error medio absoluto cuantifica la magnitud promedio del error sin considerar el signo, ofreciendo una medida de la precisión global de las mediciones.\nLa Tabla 4.5 resume los resultados obtenidos para cada variable:\n\n\n\nTabla 4.5: Error medio y error medio absoluto para cada variable del SCD30 con respecto al Fluke.\n\n\n\n\n\nVariable\nError medio\nError medio absoluto\n\n\n\n\nHumedad relativa\n-2.1681\n2.1681\n\n\nCO2\n9.6543\n13.1565\n\n\nTemperatura\n0.8853\n0.8853\n\n\n\n\n\n\nLa tabla indica que, para la humedad relativa, el SCD30 subestima en promedio 2.1681 unidades respecto al Fluke, mientras que para la concentración de CO2 se observa una sobreestimación de 9.6543 unidades en promedio, con un error medio absoluto mayor que su error medio, lo que sugiere una mayor dispersión en las mediciones. En el caso de la temperatura, la discrepancia es menor, con un error medio de 0.8853.\nLa correlación entre las mediciones de ambos instrumentos se visualiza en la Figura 4.14, lo que respalda la evaluación de precisión y consistencia. Un coeficiente de correlación elevado indicaría que, a pesar de los errores sistemáticos, la tendencia de las mediciones del SCD30 sigue de cerca la del Fluke.\n\n\n\n\n\n\n\nFigura 4.14: Correlación de las mediciones de humedad relativa, CO2 y temperatura entre el Fluke y el SCD30.\n\n\n\n\n\n\nSonido\n\n\n\n\nDevice, Modern. 2017. «Calibrating The Rev. P Wind Sensor From A New Regression». https://moderndevice.com/blogs/documentation/calibrating-the-rev-p-wind-sensor-from-a-new-regression.\n\n\nThingsBoard. 2023. «ThingsBoard: Open-source IoT platform for data collection, processing, visualization, and device management». https://thingsboard.io/.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Calibración y referenciación del DTHIS-C</span>"
    ]
  },
  {
    "objectID": "chapter_5.html",
    "href": "chapter_5.html",
    "title": "5  Conclusiones",
    "section": "",
    "text": "5.1 Limitaciones técnicas del DTHIS-C\nEl presente trabajo se centró en el desarrollo y validación del DTHIS-C, un dispositivo portátil diseñado para evaluar el confort térmico, acústico y lumínico, así como la calidad del aire en espacios interiores, mediante la medición de variables ambientales clave. A continuación, se resumen los logros alcanzados en función de los objetivos planteados:\nLa metodología experimental se basó en campañas de calibración adaptadas a las características de cada sensor. Para ello, se emplearon instrumentos de referencia de alta precisión, tales como el AMETEK Jofra PTC-155 para la temperatura ambiente, el QUESTemp 36 para la temperatura radiante, el WindMaster para la velocidad del viento y el Fluke 975 AirMeter para la calidad del aire. Se llevaron a cabo técnicas de regresión lineal para la mayoría de los sensores y, en un caso, se utilizó la regresión lineal en el dominio logarítmico. Esto permitió obtener ecuaciones de calibración para tres sensores (termopares, TPF1-E/20 y Wind Sensor), mientras que el SCD30 se referenció directamente. Estos métodos facilitaron la estimación precisa de los parámetros del modelo y la corrección de desviaciones en las mediciones.\nLos resultados obtenidos evidencian que el DTHIS-C es capaz de proporcionar datos confiables y consistentes, lo que resulta esencial para el análisis del confort en espacios interiores. Por ejemplo, la calibración del Wind Sensor permitió corregir un desfase en las lecturas de voltaje (1.1621 V en condiciones de viento nulo), y las mediciones del SCD30 mostraron una buena correlación con los instrumentos de referencia para evaluar la calidad del aire. Además, la integración con ThingsBoard garantizó una gestión eficiente de los datos, posibilitando su visualización en un dashboard en tiempo real.\nAunque el DTHIS-C ha demostrado ser una herramienta eficaz para la evaluación del confort en espacios interiores, se han identificado algunas limitaciones técnicas que podrían afectar su operatividad en entornos de campo. Entre estas se destacan la dependencia de una fuente de alimentación directa, la necesidad de mantener actualizados los instrumentos de referenciación y la falta de una interfaz integrada para la visualización de datos en el sitio de medición. Estas limitaciones reducen la autonomía del dispositivo y complican su uso en ubicaciones remotas o en condiciones de alta movilidad.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusiones</span>"
    ]
  },
  {
    "objectID": "chapter_5.html#sec-mejoras",
    "href": "chapter_5.html#sec-mejoras",
    "title": "5  Conclusiones",
    "section": "5.2 Propuestas de mejora",
    "text": "5.2 Propuestas de mejora\n\nCalibración periódica de los instrumentos de referencia: Se recomienda realizar una nueva calibración de los instrumentos de referenciación utilizados, ya que con el tiempo estos pueden experimentar desviaciones. La calibración periódica garantizará la precisión y trazabilidad de las mediciones, lo que es fundamental para la validación y el correcto funcionamiento del DTHIS-C.\nIncorporación de pantalla táctil integrada en la Raspberry: La Raspberry Pi es una computadora completa en formato compacto, equipada con una interfaz gráfica que facilita la interacción directa con el sistema. Esta capacidad permite incorporar una pantalla táctil (Raspberry, 2024), proporcionando una forma intuitiva de visualizar datos directamente en el punto de medición. Esta mejora complementa el ecosistema del DTHIS-C al ofrecer una opción adicional para supervisar el dashboard y analizar los datos en tiempo real, aumentando la eficiencia y flexibilidad durante las campañas, sin excluir la posibilidad de utilizar dispositivos externos para la supervisión remota.\nImplementación de un sistema de alimentación autónomo mediante baterías: Se propone integrar un sistema de baterías de alta capacidad para que el DTHIS-C funcione de forma totalmente portátil y autónoma, eliminando la dependencia de una conexión directa a una red de alimentación eléctrica. Esta solución ampliaría significativamente el rango de aplicación del dispositivo, permitiendo su utilización en entornos remotos o en situaciones donde el acceso a la energía eléctrica sea limitado.\n\nEstas mejoras no solo optimizarán la funcionalidad y autonomía del DTHIS-C, sino que también contribuirán a su viabilidad económica y operativa en aplicaciones reales.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusiones</span>"
    ]
  },
  {
    "objectID": "chapter_5.html#sec-conclusion",
    "href": "chapter_5.html#sec-conclusion",
    "title": "5  Conclusiones",
    "section": "5.3 Conclusión general",
    "text": "5.3 Conclusión general\nEn conclusión, el DTHIS-C se presenta como una herramienta eficaz, versátil y económicamente accesible para la evaluación del confort en espacios interiores. Al haberse desarrollado con tecnologías abiertas, se posiciona como una alternativa viable frente a los equipos de medición tradicionales, cuyos altos costos suelen limitar su accesibilidad. La combinación de un diseño modular, procesos de calibración, y la capacidad de conectividad y visualización de datos en tiempo real confiere al dispositivo una alta fiabilidad en aplicaciones prácticas. Los resultados de este proyecto no solo validan el desempeño del DTHIS-C, sino que también establecen una base sólida para futuras mejoras y aplicaciones en el ámbito de la instrumentación para la medición de variables ambientales.\n\n\n\n\nRaspberry. 2024. «Raspberry Pi Touch Display 2». https://www.raspberrypi.com/products/touch-display-2/.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusiones</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "Bibliografía",
    "section": "",
    "text": "Adafruit. n.d. “Adafruit PT1000 RTD Temperature Sensor Amplifier -\nMAX31865.” https://www.adafruit.com/product/3648#description.\n\n\nAntoniadou, Panagiota, and Agis M. Papadopoulos. 2017. “Occupants’\nThermal Comfort: State of the Art and the Prospects of Personalized\nAssessment in Office Buildings.” Energy and Buildings\n153: 136–49. https://doi.org/10.1016/j.enbuild.2017.08.001.\n\n\nArducam. n.d. “Arducam 5MP OV5647 Ultra Wide Angle Fisheye Camera\nfor Raspberry Pi.” https://www.arducam.com/product/arducam-ultra-wide-angle-fisheye-5mp-ov5647-camera-for-raspberry-pi/.\n\n\nArduino. 2023. “Arduino UNO WiFi Rev2.” https://store.arduino.cc/products/arduino-uno-wifi-rev2.\n\n\nASHRAE-55. 2021. ANSI/ASHRAE Standard 55-2020: Thermal Environmental\nConditions for Human Occupancy. Atlanta, GA: American Society of\nHeating, Refrigerating; Air-Conditioning Engineers (ASHRAE).\n\n\nASHRAE-62. 2001. ANSI/ASHRAE Standard 62-2001: Ventilation for\nAcceptable Indoor Air Quality. Vol. 62. 2001. American Society of\nHeating, Refrigerating; Air-Conditioning Engineers.\n\n\nAzar, Elie, William O’Brien, Salvatore Carlucci, Tianzhen Hong, Andrew\nSonta, Joyce Kim, Maedot S. Andargie, et al. 2020.\n“Simulation-Aided Occupant-Centric Building Design: A Critical\nReview of Tools, Methods, and Applications.” Energy and\nBuildings 224: 110292. https://doi.org/10.1016/j.enbuild.2020.110292.\n\n\nBerglund, B. 1999. “Guidelines for Community Noise.”\nWorld Health Organization.\n\n\nCIE. 2020a. “Illuminance (17-21-060).” https://cie.co.at/eilvterm/17-21-060.\n\n\n———. 2020b. “Luminance (17-21-050).” https://cie.co.at/eilvterm/17-21-050.\n\n\nDevice, Modern. 2017. “Calibrating the Rev. P Wind Sensor from a\nNew Regression.” https://moderndevice.com/blogs/documentation/calibrating-the-rev-p-wind-sensor-from-a-new-regression.\n\n\nDjongyang, Noël, René Tchinda, and Donatien Njomo. 2010. “Thermal\nComfort: A Review Paper.” Renewable and Sustainable Energy\nReviews 14 (9): 2626–40. https://doi.org/10.1016/j.rser.2010.07.040.\n\n\nFanger, P. O. 1970. Thermal Comfort: Analysis and Applications in\nEnvironmental Engineering. Copenhagen: Danish Technical Press. https://archive.org/details/thermalcomfortan0000fang.\n\n\nFuehlerSysteme. n.d. “Radiation Pendulum Temperature\nSensor.” https://www.fuehlersysteme.de/Radiation-Pendulum-Temperature-Sensor_1#70bd/embedded/.\n\n\nInternational Standardization Organization (ISO). 2005.\n“Ergonomics of the Thermal Environment-Analytical Determination\nand Interpretation of the Thermal Comfort Using Calculation of the PMV\nand PPD Indices and Local Thermal Comfort.” ISO Standard 7730.\nGeneva.\n\n\nMacpherson, R. K. 1962. “The Assessment of the Thermal\nEnvironment: A Review.” British Journal of Industrial\nMedicine 19 (3): 151–64. https://doi.org/10.1136/oem.19.3.151.\n\n\nModernDevice. n.d. “Wind Sensor Rev. p.” https://moderndevice.com/products/wind-sensor-rev-p.\n\n\nOMEGA. n.d. “¿Qué Es Un Sensor Termopar?” https://es.omega.com/prodinfo/termopares.html#.\n\n\nPWFusion. n.d. “4-Channel t-Type Thermocouple MAX31856 SPI Digital\nArduino Shield.” https://www.playingwithfusion.com/productview.php?pdid=71&catid=1008.\n\n\nRaspberry. 2019. “Raspberry Pi 4 Model b.” https://www.raspberrypi.com/products/raspberry-pi-4-model-b/.\n\n\n———. 2024. “Raspberry Pi Touch Display 2.” https://www.raspberrypi.com/products/touch-display-2/.\n\n\nSensirion. n.d. “SCD30.” https://sensirion.com/products/catalog/SCD30.\n\n\nStandard, British. 2011. “Light and Lighting: Lighting of Work\nPlaces: Part 1: Indoor Work Places.” NS-EN 12464-1:\n2011.\n\n\nSteren. n.d. “Micrófono USB c de Solapa Para Celular.” https://www.steren.com.mx/microfono-usb-c-de-solapa-para-celular.html.\n\n\nThingsBoard. 2023. “ThingsBoard: Open-Source IoT Platform for Data\nCollection, Processing, Visualization, and Device Management.” https://thingsboard.io/.\n\n\nVásquez, Natalia Giraldo, Maíra Longhinotti Felippe, Fernando O. R.\nPereira, and Ariane Kuhnen. 2019. “Luminous and Visual Preferences\nof Young Children in Their Classrooms: Curtain Use, Artificial Lighting\nand Window Views.” Building and Environment 152: 59–73.\nhttps://doi.org/10.1016/j.buildenv.2019.01.049.\n\n\nWu, Y., Z. Liu, and Z. Kong. 2023. “Indoor Environmental Quality\nand Occupant Comfort.” Buildings 13 (6): 1400. https://doi.org/10.3390/buildings13061400.",
    "crumbs": [
      "Bibliografía"
    ]
  }
]